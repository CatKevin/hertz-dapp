{"version":3,"sources":["views/Asset/Components/Details/Review.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/VaultHero.tsx","views/Asset/Components/General/BreadcrumbList.tsx","views/Asset/Components/General/Row.tsx"],"names":["Review","useState","isChecked","setIsChecked","style","marginTop","step","width","flexDirection","alignItems","justifyContent","size","color","mt","mb","bold","borderRadius","padding","checked","onChange","ml","disabled","Divider","styled","div","theme","colors","borderColor","StyledHero","Box","Title","Heading","attrs","as","primary","Image","mediaQueries","lg","Hero","title","heading","pr","InlineLink","Link","Questions","marginBottom","maxWidth","mr","src","alt","href","marginLeft","target","VaultHero","steps","BreadcrumbList","map","item","index","NameColumn","AumColumn","TopAssetsColumn","InceptionColumn","MonthColumn","DayColumn","WeekColumn","Row","Grid","sm"],"mappings":"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","file":"static/js/20.ef42e6fa.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport Container from \"components/layout/Container\"\nimport { Flex, Heading, Text, Box, Button, Card, Checkbox } from \"hertz-uikit\"\nimport Questions from \"../General/Questions\"\nimport Row, { NameColumn, AumColumn } from \"../General/Row\"\nimport VaultHero from \"../General/VaultHero\"\nimport BreadcrumbList from \"../General/BreadcrumbList\"\nimport Divider from \"../General/Divider\"\n\nconst Review = () => {\n    const [isChecked, setIsChecked] = useState(false)\n    return (\n        <div>\n            <VaultHero />\n            <Container style={{ marginTop: \"20px\" }}>\n                <BreadcrumbList step={5} />\n\n                <Divider />\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"10px\" mb=\"5px\">\n                        Review\n                    </Heading>\n\n                    <Text mt=\"10px\">Please review the vault configuration carefully before creating.</Text>\n                    <Text bold>All configuration settings are permanent (except where indicated).</Text>\n\n\n                </Flex>\n\n                <Box>\n                    <Text mt=\"10px\" mb=\"10px\" bold>Vault Basics</Text>\n                    <Card style={{ borderRadius: \"15px\" }}>\n                        <Row>\n                            <NameColumn>\n                                <Text bold>\n                                    Vault Name\n                                </Text>\n                            </NameColumn>\n\n                            <AumColumn>\n                                <Text>My Vault</Text>\n                            </AumColumn>\n                        </Row>\n\n                        <Row>\n                            <NameColumn>\n                                <Text bold>\n                                    Denomination Asset\n                                </Text>\n                            </NameColumn>\n\n                            <AumColumn>\n                                <Text>WBTC</Text>\n                            </AumColumn>\n                        </Row>\n                    </Card>\n                </Box>\n\n                <Box>\n                    <Text mt=\"10px\" mb=\"10px\" bold>Advanced Settings</Text>\n                    <Card style={{ borderRadius: \"15px\" }}>\n                        <Row>\n                            <NameColumn>\n                                <Text bold>\n                                    Shares Action Timelock\n                                </Text>\n                            </NameColumn>\n\n                            <AumColumn>\n                                <Text>24 hours</Text>\n                            </AumColumn>\n                        </Row>\n                    </Card>\n                </Box>\n\n                <Box>\n                    <Text mt=\"10px\" mb=\"10px\" bold>Terms & Conditions</Text>\n                    <Card style={{ borderRadius: \"15px\", padding: \"30px\" }}>\n                        <Text>By using this software, you understand, acknowledge and accept that Enzyme Finance and/or the underlying software are provided “as is” and without warranties or representations of any kind either expressed or implied. Any use of this open source software released under the GNU General Public License version 3 (GPL 3) is done at your own risk to the fullest extent permissible pursuant to applicable law any and all liability as well as all warranties, including any fitness for a particular purpose with respect to Enzyme Finance and/or the underlying software and the use thereof are disclaimed.\n                        </Text>\n                    </Card>\n                </Box>\n\n                <Flex alignItems=\"center\" justifyContent=\"flex-start\" mt=\"10px\">\n                    <Checkbox checked={isChecked} onChange={() => setIsChecked(!isChecked)} />\n                    <Text ml=\"10px\">I agree to the Terms & Conditions</Text>\n                </Flex>\n\n                <Box mt=\"10px\">\n                    <Button disabled={!isChecked}>Submit</Button>\n                </Box>\n                <Questions />\n            </Container>\n        </div >\n    )\n}\nexport default Review","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"#\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import React from \"react\"\nimport Hero from \"./Hero\"\n\nconst VaultHero = () => {\n    const title = \"Create Your Vault\"\n    const heading = \"Your future asset management\"\n\n    return (\n        <Hero title={title} heading={heading} />\n    )\n}\n\nexport default VaultHero\n\n","import React from \"react\"\nimport { Breadcrumbs, Text } from \"hertz-uikit\"\n\nconst steps = ['Basic', 'Fees (optional)', 'Deposits (optional)', 'Redemptions (optional)', 'Advanced Settings (optional)', 'Review']\n\ninterface CurrentStepProps {\n    step: number\n}\n\nconst BreadcrumbList: React.FC<CurrentStepProps> = ({ step }) => {\n    return (\n        <Breadcrumbs>\n            {steps.map((item, index) => {\n                return (\n                    <Text key={item} color={index <= step ? 'text' : 'textDisabled'}>\n                        {item}\n                    </Text>\n                )\n            })}\n        </Breadcrumbs>\n    )\n}\n\nexport default BreadcrumbList","import styled from 'styled-components'\nimport { Grid, Box } from 'hertz-uikit'\n\nexport const NameColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: name;\n`\n\nexport const AumColumn = styled(Box)`\n  grid-area: aum;\n`\n\nexport const TopAssetsColumn = styled(Box)`\n  grid-area: topAsset;\n`\n\nexport const InceptionColumn = styled(Box)`\n  grid-area: inception;\n`\n\nexport const MonthColumn = styled(Box)`\n  grid-area: month;\n`\n\nexport const DayColumn = styled(Box)`\n  grid-area: day;\n`\n\nexport const WeekColumn = styled(Box)`\n  grid-area: week;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  grid-gap: 8px;\n  grid-template-areas: 'id name aum topAsset inception month day week';\n  grid-template-columns:1fr 4fr 2fr 2fr 2fr 1fr 1fr 1fr;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 20px;\n    padding: 20px 24px;\n  }\n`\n\nexport default Row"],"sourceRoot":""}