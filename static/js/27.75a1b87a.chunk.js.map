{"version":3,"sources":["views/Asset/Components/AssetsCard/BoardCard.tsx","views/Asset/Assets.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","views/Asset/Components/General/Hero.tsx","components/UnlockButton.tsx"],"names":["CardLayout","styled","BaseLayout","theme","mediaQueries","sm","StyledImg","img","CardConatiner","div","BoardCard","account","useWallet","alignItems","justifyContent","mb","src","alt","as","Link","fullWidth","to","UnlockButton","Assets","Hero","title","heading","style","textAlign","size","color","mt","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","StyledHero","Box","Title","Heading","attrs","colors","primary","Image","lg","pr","props","comp","TranslateString","connect","reset","error","useWalletModal","onPresentConnectModal","onPresentWrongNetworkModal","onClick","variant"],"mappings":"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","file":"static/js/27.75a1b87a.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport styled from \"styled-components\";\nimport { BaseLayout, Flex, Heading, Card, CardHeader, Text, Button, Box } from \"hertz-uikit\";\nimport UnlockButton from \"components/UnlockButton\";\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nconst CardLayout = styled(BaseLayout)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding-left: 50px;\n  padding-right: 50px;\n  padding-top:50px;\n  padding-bottom:50px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (max-width: 768px) {\n   padding:30px\n  }\n`\n\nconst StyledImg = styled.img`\n    float: left;\n    width: 100px;\n    margin-right:20px;\n\n    @media (max-width:768px){\n         float: none;\n         margin:0 auto;\n         display:block;\n         margin-bottom:10px;\n    }\n\n`\n\nconst CardConatiner = styled.div`\n    padding:50px;\n\n    @media (max-width: 768px) {\n        padding:30px\n    }\n`\n\nconst BoardCard = () => {\n    const { account } = useWallet()\n\n    return (\n        <div>\n            <CardLayout>\n                <Card>\n                    <CardHeader>\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                            <Heading>Hertz Fund Dashboard</Heading>\n                        </Flex>\n                    </CardHeader>\n\n                    <CardConatiner>\n                        <Box mb=\"50px\">\n                            <StyledImg src=\"./images/asset/board/dashboard.png\" alt=\"dashboard\" />\n                            <Text>\n                                Hertz Fund Dashboard gives you a one stop dashboard to reach hundreds and thousands of Fund created by\n                                Fund Manager around the world. You can pick the one you like based on your own Risk tolerance,\n                                Portofolio Preferences and Return Ratio. Also make sure to join our community to disscuss different\n                                trading strategy under different Fund Manager.\n                            </Text>\n                        </Box>\n\n\n                        {account ? (\n                            <Button as={Link} fullWidth to=\"/assets/deposit\">\n                                Browse\n                            </Button>\n                        ) : (\n                            <UnlockButton fullWidth />\n                        )}\n                    </CardConatiner>\n                </Card>\n\n                <Card>\n                    <CardHeader>\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                            <Heading>Create your Fund</Heading>\n                        </Flex>\n                    </CardHeader>\n\n                    <CardConatiner>\n                        <Box mb=\"50px\">\n                            <StyledImg src=\"./images/asset/board/fund.png\" alt=\"dashboard\" />\n                            <Text>\n                                Are you hyped to be fund manger? Whether you are dreamed to be Warren Buffet or Ray Dalio, now it is\n                                the time to open your own fund / vault under your finger tips in a decentralized fashion. If you fund\n                                potofolio leading the way, then it potentially can attract thousands of followers to invest in your\n                                fund! Lets check it out here!\n                            </Text>\n                        </Box>\n                        {account ? <Button fullWidth as={Link} to=\"/assets/setup\">Create Fund</Button> : <UnlockButton fullWidth />}\n                    </CardConatiner>\n                </Card>\n            </CardLayout>\n\n            <CardLayout>\n                <Card>\n                    <CardHeader>\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                            <Heading>Network Stats</Heading>\n                        </Flex>\n                    </CardHeader>\n\n                    <CardConatiner>\n                        <Box mb=\"50px\">\n                            <StyledImg src=\"./images/asset/board/stats.png\" alt=\"dashboard\" />\n                            <Text>\n                                As an Asset management platform, stats of the whole network is the top priority for us. Over here you\n                                can see all the important stats including Hertz Price, Hertz Market Cap, Network C-Ratio, Active\n                                C-Ratio, Token distributed heat map. Lucky draw latest winners. Total AUM, total fund managers and\n                                vaults etc etc.\n                            </Text>\n                        </Box>\n                        {account ? <Button fullWidth as={Link} to=\"/assets/monitor\">Check Status</Button> : <UnlockButton fullWidth />}\n                    </CardConatiner>\n                </Card>\n\n                <Card>\n                    <CardHeader>\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                            <Heading>Hertz Top Index</Heading>\n                        </Flex>\n                    </CardHeader>\n\n                    <CardConatiner>\n                        <Box mb=\"50px\">\n                            <StyledImg src=\"./images/asset/board/index.png\" alt=\"dashboard\" />\n                            <Text>\n                                hTopIndex is a tokenized index mirroring the best traders on Hertz. The Hertz platform crowdsources\n                                the best managers around the world and ranks them based on their risk-adjusted returns. With hTopIndex\n                                anyone can easily get exposure to the best traders through one ERC-20 token. Hertz ranks managers\n                                based on their Score.\n                            </Text>\n                        </Box>\n                        {account ? (\n                            <Button as={Link} fullWidth to=\"/assets/hertzTop\">\n                                Explore\n                            </Button>\n                        ) : (\n                            <UnlockButton fullWidth />\n                        )}\n                    </CardConatiner>\n                </Card>\n            </CardLayout>\n        </div>\n    )\n\n}\n\nexport default BoardCard","import React from \"react\";\nimport { BaseLayout, Flex, Heading, Box } from \"hertz-uikit\";\nimport Hero from \"./Components/General/Hero\"\nimport BoardCard from \"./Components/AssetsCard/BoardCard\";\n\nconst Assets = () => {\n  const title = \"Hertz Assets Management\"\n  const heading = \"Property is under our care. We help you manage your assets.\"\n  return (\n    <div>\n      <Hero title={title} heading={heading} />\n      <Box style={{ textAlign: \"center\" }}>\n        <Heading size=\"xl\" color=\"secondary\" mt=\"40px\">\n          Join Our Assets Management\n        </Heading>\n      </Box>\n      <BoardCard />\n    </div>\n  )\n}\n\nexport default Assets","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from 'react'\nimport { Button, useWalletModal } from 'hertz-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset, error } = useWallet()\n  const { onPresentConnectModal, onPresentWrongNetworkModal } = useWalletModal(connect, reset, error)\n  let comp\n  if (error) {\n    comp = (\n      <Button onClick={onPresentWrongNetworkModal} {...props} variant=\"danger\">\n        Wrong Network\n      </Button>\n    )\n  } else {\n    comp = (\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    )\n  }\n\n  return <div>{comp}</div>\n}\n\nexport default UnlockButton\n"],"sourceRoot":""}