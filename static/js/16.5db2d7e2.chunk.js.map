{"version":3,"sources":["views/Asset/Components/General/DepositRow.tsx","views/Asset/Components/Details/Deposit.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/Row.tsx","components/Select/select.tsx"],"names":["DepositRow","index","name","aum","assets","inception","month","day","week","color","Row","fontSize","textTransform","bold","map","item","src","alt","width","parseFloat","data","type","Deposit","Hero","title","heading","Container","flexDirection","alignItems","justifyContent","size","mt","mb","placeholder","options","label","value","deposit","id","Questions","Divider","styled","div","theme","colors","borderColor","StyledHero","Box","Title","Heading","attrs","as","primary","Image","mediaQueries","lg","pr","InlineLink","Link","style","marginBottom","maxWidth","mr","href","marginLeft","target","NameColumn","AumColumn","TopAssetsColumn","InceptionColumn","MonthColumn","DayColumn","WeekColumn","Grid","sm","DropDownHeader","shadows","inset","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","props","isOpen","css","DropDownList","ul","ListItem","li","Select","onChange","containerRef","useRef","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","event","stopPropagation","useEffect","current","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","ref","onClick","ml","option","selectedIndex"],"mappings":"wNAgEeA,EA/CyB,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,IAAKC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9F,OACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMC,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,SACKZ,MAGT,cAAC,IAAD,UACI,cAAC,IAAD,UAAOC,MAEX,cAAC,IAAD,UACI,cAAC,IAAD,UAAOC,MAEX,cAAC,IAAD,UAEQC,EAAOU,KAAI,SAACC,GAAD,OACP,+BACI,qBAAKC,IAAG,+BAA0BD,EAA1B,QAAsCE,IAAKF,EAAMG,MAAM,UADxDH,QAOvB,cAAC,IAAD,UACI,cAAC,IAAD,CAAMN,MAAOU,WAAWd,GAAa,EAAI,UAAY,UAArD,SAAiEA,MAGrE,cAAC,IAAD,UACI,cAAC,IAAD,CAAMI,MAAOU,WAAWb,IAAU,EAAI,UAAY,UAAlD,SAA8DA,MAGlE,cAAC,IAAD,UACI,cAAC,IAAD,CAAMG,MAAOU,WAAWZ,IAAQ,EAAI,UAAY,UAAhD,SAA4DA,MAGhE,cAAC,IAAD,UACI,eAAC,aAAD,CAAYa,KAAMZ,EAAlB,UACI,cAAC,iBAAD,CAAgBC,MAAOA,IACvB,cAAC,kBAAD,IACA,cAAC,0BAAD,CAAyBY,KAAK,kB,SCoEnCC,UAnHC,WAGZ,OACI,gCACI,cAACC,EAAA,EAAD,CAAMC,MAJA,qBAIcC,QAHZ,+BAKR,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAMR,MAAM,OAAOS,cAAc,SAASC,WAAW,QAAQC,eAAe,SAA5E,SACI,cAAC,IAAD,CAASC,KAAK,KAAKrB,MAAM,YAAYsB,GAAG,OAAOC,GAAG,MAAlD,0BAKJ,eAAC,IAAD,CAAMd,MAAM,OAAOU,WAAW,SAASC,eAAe,gBAAgBG,GAAG,OAAzE,UACI,gCACI,cAAC,IAAD,CAAMrB,SAAS,OAAOE,MAAI,EAACJ,MAAM,aAAaG,cAAc,YAA5D,0BAGA,cAAC,IAAD,CAAOqB,YAAY,iBAGvB,gCACI,cAAC,IAAD,CAAMtB,SAAS,OAAOE,MAAI,EAACJ,MAAM,aAAaG,cAAc,YAA5D,qBAGA,8BACI,cAAC,IAAD,CACIsB,QAAS,CACL,CACIC,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,OACPC,MAAO,QAEX,CACID,MAAO,YACPC,MAAO,aAEX,CACID,MAAO,aACPC,MAAO,yBAS/B,eAAC,IAAD,WACI,eAAC1B,EAAA,EAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMC,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,uBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,oBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,mBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,0BAKJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,+BAKJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,0BAKJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,mBAKJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMF,SAAS,OAAOF,MAAM,aAAaG,cAAc,YAAYC,MAAI,EAAvE,8BAOJwB,EAAQvB,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAA0Bd,MAAOc,EAAKuB,GAAIpC,KAAMa,EAAKb,KAAMC,IAAKY,EAAKZ,IAAKC,OAAQW,EAAKX,OAAQE,MAAOS,EAAKT,MAAOC,IAAKQ,EAAKR,IAAKF,UAAWU,EAAKV,UAAWG,KAAMO,EAAKP,KAAMC,MAAOM,EAAKN,OAAxKM,EAAKuB,UAKlC,cAACC,EAAA,EAAD,Y,+CClHVC,E,KAAUC,EAAOC,IAAV,yGACS,qBAAGC,MAAkBC,OAAOC,eAMnCL,O,0FCCTM,EAAaL,YAAOM,IAAPN,CAAH,iJAMVO,EAAQP,YAAOQ,KAASC,MAAM,CAAEC,GAAI,KAAMrB,KAAM,MAAxCW,CAAH,uFACA,qBAAGE,MAAkBC,OAAOQ,WAKlBX,YAAOY,IAAPZ,CAAH,mFAGd,qBAAGE,MAAkBW,aAAaC,MAwBvBhC,IAnBmB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACxC,OACI,cAACqB,EAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMlB,WAAW,SAASC,eAAe,gBAAzC,SACI,eAAC,IAAD,CAAK2B,GAAG,OAAR,UACI,cAACR,EAAD,UACKxB,IAEL,cAAC,IAAD,CAASQ,GAAG,OAAZ,SACKP,e,sFCpCvBgC,EAAahB,YAAOiB,IAAPjB,CAAH,gDA4BDF,IAxBG,WACd,OACI,eAAC,IAAD,CAAKrB,MAAM,OAAOyC,MAAO,CAAEC,aAAc,QAAzC,UACI,cAAC,IAAD,IACA,eAAC,IAAD,CAAM/B,eAAe,SAASD,WAAW,SAASD,cAAe,CAAC,SAAU,SAAU,OAAtF,UACI,cAAC,IAAD,CAAMkC,SAAS,QAAQC,GAAG,MAAM9B,GAAG,OAAnC,SACI,qBAAKhB,IAAI,gCAAgCC,IAAI,eAEjD,eAAC,IAAD,CAAM4C,SAAS,QAAQlC,cAAc,SAArC,UACI,cAAC,IAAD,CAASK,GAAG,OAAZ,kCAGA,eAAC,IAAD,yCAEI,cAACyB,EAAD,CAAYM,KAAK,2BAA2BC,WAAW,MAAMC,OAAO,SAApE,iD,0TCpBXC,EAAazB,YAAOM,KAAKG,MAAM,CAAEtB,WAAY,UAAhCa,CAAH,gDAIV0B,EAAY1B,YAAOM,IAAPN,CAAH,+CAIT2B,EAAkB3B,YAAOM,IAAPN,CAAH,oDAIf4B,EAAkB5B,YAAOM,IAAPN,CAAH,qDAIf6B,EAAc7B,YAAOM,IAAPN,CAAH,iDAIX8B,EAAY9B,YAAOM,IAAPN,CAAH,+CAIT+B,EAAa/B,YAAOM,IAAPN,CAAH,gDAIjB/B,EAAM+B,YAAOgC,IAAPhC,CAAH,sSACoB,qBAAGE,MAAkBC,OAAOC,eAMrD,qBAAGF,MAAkBW,aAAaoB,MAMvBhE,O,uGCxCTiE,EAAiBlC,IAAOC,IAAV,uTAOJ,qBAAGC,MAAkBiC,QAAQC,SAG7B,qBAAGlC,MAAkBC,OAAOkC,SAItCC,EAAwBtC,IAAOC,IAAV,wTAKX,qBAAGC,MAAkBC,OAAOkC,SAC/B,qBAAGnC,MAAkBqC,SAASC,YAOvC,qBAAGtC,MAAkBW,aAAaoB,MAKhCQ,EAAoBzC,IAAOC,IAAV,0VAEZ,qBAAGxB,SAEE,qBAAGyB,MAAkBC,OAAOkC,SAMxC,qBAAGnC,MAAkBW,aAAaoB,MAIlC,SAACS,GAAD,OACAA,EAAMC,QACNC,YADA,6XAEIV,EAKAI,MAkBFO,EAAe7C,IAAO8C,GAAV,qGAIL,qBAAG5C,MAAkBqC,SAASC,YAGrCO,EAAW/C,IAAOgD,GAAV,wIA2FCC,IAxEsC,SAAC,GAA2B,IAAzBxD,EAAwB,EAAxBA,QAASyD,EAAe,EAAfA,SACzDC,EAAeC,iBAAO,MACtBC,EAAcD,iBAAO,MAC3B,EAA4BE,oBAAS,GAArC,mBAAOX,EAAP,KAAeY,EAAf,KACA,EAAsDD,mBAAS,GAA/D,mBAAOE,EAAP,KAA4BC,EAA5B,KACA,EAA0CH,mBAAS,CAAE7E,MAAO,EAAGiF,OAAQ,IAAvE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,SAACC,GAChBP,GAAWZ,GACXmB,EAAMC,mBA4BR,OAhBAC,qBAAU,WACRJ,EAAiB,CACfnF,MAAO4E,EAAYY,QAAQC,YAC3BR,OAAQL,EAAYY,QAAQE,eAG9B,IAAMC,EAAqB,WACzBb,GAAU,IAIZ,OADAc,SAASC,iBAAiB,QAASF,GAC5B,WACLC,SAASE,oBAAoB,QAASH,MAEvC,IAGD,eAAC3B,EAAD,yBAAmBE,OAAQA,EAAQ6B,IAAKrB,GAAkBQ,GAA1D,cAC2B,IAAxBA,EAAclF,OACb,cAACyD,EAAD,CAAgBuC,QAASZ,EAAzB,SAEIpE,EAAQ+D,GAAqBjF,IAAM,eAAC,IAAD,CAAMY,WAAW,SAASC,eAAe,aAAzC,UACjC,qBAAKb,IAAKkB,EAAQ+D,GAAqBjF,IAAKC,IAAKiB,EAAQ+D,GAAqB9D,MAAOjB,MAAM,SAC3F,cAAC,IAAD,CAAMiG,GAAG,OAAT,SAAiBjF,EAAQ+D,GAAqB9D,WACtC,cAAC,IAAD,UAAOD,EAAQ+D,GAAqB9D,UAIpD,cAAC,IAAD,CAAmB1B,MAAM,OAAOyG,QAASZ,IACzC,cAACvB,EAAD,UACE,cAACO,EAAD,CAAc2B,IAAKnB,EAAnB,SACG5D,EAAQpB,KAAI,SAACsG,EAAQnH,GAAT,OACXA,IAAUgG,EACR,cAACT,EAAD,CAAU0B,SA1CGG,EA0CsBpH,EA1CI,WACjDiG,EAAuBmB,GACvBrB,GAAU,GAENL,GACFA,EAASzD,EAAQmF,MAqCT,SACGD,EAAOpG,IACN,eAAC,IAAD,CAAMY,WAAW,SAASC,eAAe,aAAzC,UACE,qBAAKb,IAAKoG,EAAOpG,IAAKC,IAAKmG,EAAOjF,MAAOjB,MAAM,SAC/C,cAAC,IAAD,CAAMiG,GAAG,OAAT,SAAiBC,EAAOjF,WAExB,cAAC,IAAD,UAAOiF,EAAOjF,SAN4BiF,EAAOjF,OAUrD,KApDU,IAACkF,e","file":"static/js/16.5db2d7e2.chunk.js","sourcesContent":["import React from 'react'\nimport { Sparklines, SparklinesLine, SparklinesSpots, SparklinesReferenceLine } from 'react-sparklines';\nimport { Text, Box } from 'hertz-uikit'\nimport Row, { NameColumn, AumColumn, TopAssetsColumn, InceptionColumn, MonthColumn, DayColumn, WeekColumn } from \"./Row\"\n\ninterface ListProps {\n    index: string\n    name: string,\n    aum: string,\n    assets: string[],\n    inception: string,\n    month: string,\n    day: string,\n    week: number[],\n    color: string\n}\n\nconst DepositRow: React.FC<ListProps> = ({ index, name, aum, assets, inception, month, day, week, color }) => {\n    return (\n        <Row>\n            <Box>\n                <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                    {index}\n                </Text>\n            </Box>\n            <NameColumn>\n                <Text>{name}</Text>\n            </NameColumn>\n            <AumColumn>\n                <Text>{aum}</Text>\n            </AumColumn>\n            <TopAssetsColumn>\n                {\n                    assets.map((item) => (\n                        <span key={item}>\n                            <img src={`./images/asset/token/${item}.png`} alt={item} width=\"25px\" />\n                        </span>\n                    ))\n                }\n            </TopAssetsColumn>\n\n            <InceptionColumn>\n                <Text color={parseFloat(inception) > 0 ? \"success\" : 'failure'}>{inception}</Text>\n            </InceptionColumn>\n\n            <MonthColumn>\n                <Text color={parseFloat(month) >= 0 ? \"success\" : 'failure'}>{month}</Text>\n            </MonthColumn>\n\n            <DayColumn>\n                <Text color={parseFloat(day) >= 0 ? \"success\" : 'failure'}>{day}</Text>\n            </DayColumn>\n\n            <WeekColumn>\n                <Sparklines data={week}>\n                    <SparklinesLine color={color} />\n                    <SparklinesSpots />\n                    <SparklinesReferenceLine type=\"mean\" />\n                </Sparklines>\n            </WeekColumn>\n        </Row>\n    )\n}\n\nexport default DepositRow","import React from \"react\"\nimport Select, { OptionProps } from 'components/Select/select'\nimport { Text, Card, Flex, Heading, Input, Box } from \"hertz-uikit\"\nimport Container from \"components/layout/Container\"\nimport Hero from \"../General/Hero\"\nimport Row, { NameColumn, AumColumn, TopAssetsColumn, InceptionColumn, MonthColumn, DayColumn, WeekColumn } from \"../General/Row\"\nimport deposit from \"../../Constants/depositList.json\"\nimport DepositRow from \"../General/DepositRow\"\nimport Questions from \"../General/Questions\"\n\nconst Deposit = () => {\n    const title = \"Browse and Deposit\"\n    const heading = \"Safety is our top priority\"\n    return (\n        <div>\n            <Hero title={title} heading={heading} />\n\n            <Container>\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"40px\" mb=\"5px\">\n                        Top Assets\n                    </Heading>\n                </Flex>\n\n                <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mb=\"10px\">\n                    <div>\n                        <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                            Search Funds\n                        </Text>\n                        <Input placeholder=\"Search...\" />\n                    </div>\n\n                    <div>\n                        <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                            Sort by\n                        </Text>\n                        <div>\n                            <Select\n                                options={[\n                                    {\n                                        label: 'AUM',\n                                        value: 'AUM',\n                                    },\n                                    {\n                                        label: 'Name',\n                                        value: 'Name',\n                                    },\n                                    {\n                                        label: 'Inception',\n                                        value: 'Inception',\n                                    },\n                                    {\n                                        label: 'This month',\n                                        value: 'This month',\n                                    },\n                                ]}\n                            />\n                        </div>\n                    </div>\n\n                </Flex>\n\n                <Card>\n                    <Row>\n                        <Box>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                # Index\n                            </Text>\n                        </Box>\n                        <NameColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                NAME\n                            </Text>\n                        </NameColumn>\n                        <AumColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                AUM\n                            </Text>\n                        </AumColumn>\n                        <TopAssetsColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                TOP ASSETS\n                            </Text>\n                        </TopAssetsColumn>\n\n                        <InceptionColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                SINCE INCEPTION\n                            </Text>\n                        </InceptionColumn>\n\n                        <MonthColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                THIS MONTH\n                            </Text>\n                        </MonthColumn>\n\n                        <DayColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                24H\n                            </Text>\n                        </DayColumn>\n\n                        <WeekColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                LAST 7 DAYS\n                            </Text>\n                        </WeekColumn>\n                    </Row>\n\n                    {\n                        deposit.map((item) => (\n                            <DepositRow key={item.id} index={item.id} name={item.name} aum={item.aum} assets={item.assets} month={item.month} day={item.day} inception={item.inception} week={item.week} color={item.color} />\n                        ))\n                    }\n                </Card>\n\n                <Questions />\n            </Container>\n\n        </div>\n    )\n\n}\n\nexport default Deposit","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"https://docs.leekdao.xyz\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import styled from 'styled-components'\nimport { Grid, Box } from 'hertz-uikit'\n\nexport const NameColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: name;\n`\n\nexport const AumColumn = styled(Box)`\n  grid-area: aum;\n`\n\nexport const TopAssetsColumn = styled(Box)`\n  grid-area: topAsset;\n`\n\nexport const InceptionColumn = styled(Box)`\n  grid-area: inception;\n`\n\nexport const MonthColumn = styled(Box)`\n  grid-area: month;\n`\n\nexport const DayColumn = styled(Box)`\n  grid-area: day;\n`\n\nexport const WeekColumn = styled(Box)`\n  grid-area: week;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  grid-gap: 8px;\n  grid-template-areas: 'id name aum topAsset inception month day week';\n  grid-template-columns:1fr 4fr 2fr 2fr 2fr 1fr 1fr 1fr;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 20px;\n    padding: 20px 24px;\n  }\n`\n\nexport default Row","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text, Flex } from 'hertz-uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid 1px solid rgb(215, 202, 236);\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 50%;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid 1px solid rgb(215, 202, 236);\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid 1px solid rgb(215, 202, 236);\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: 1px solid rgb(215, 202, 236);\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  src?: string\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          {\n            options[selectedOptionIndex].src ? <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n              <img src={options[selectedOptionIndex].src} alt={options[selectedOptionIndex].label} width=\"30px\" />\n              <Text ml=\"10px\">{options[selectedOptionIndex].label}</Text>\n            </Flex> : <Text>{options[selectedOptionIndex].label}</Text>\n          }\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                {option.src ?\n                  <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                    <img src={option.src} alt={option.label} width=\"30px\" />\n                    <Text ml=\"10px\">{option.label}</Text>\n                  </Flex>\n                  : <Text>{option.label}</Text>\n                }\n\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select"],"sourceRoot":""}