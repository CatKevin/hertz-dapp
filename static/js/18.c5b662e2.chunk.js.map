{"version":3,"sources":["views/Asset/Components/Details/Vault.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/VaultHero.tsx","views/Asset/Components/General/BreadcrumbList.tsx","components/Select/select.tsx"],"names":["Vault","useState","vaultName","setVaultName","validVaultName","setValidVaultName","validateAllFields","field","fieldValue","validator","isLength","min","max","style","marginTop","step","width","flexDirection","alignItems","justifyContent","size","color","mt","mb","mr","bold","marginBottom","placeholder","value","onChange","e","currentTarget","handleIsValid","onBlur","required","isSuccess","isWarning","fontSize","options","label","src","disabled","as","Link","to","Divider","styled","div","theme","colors","borderColor","StyledHero","Box","Title","Heading","attrs","primary","Image","mediaQueries","lg","Hero","title","heading","pr","InlineLink","Questions","maxWidth","alt","href","marginLeft","target","VaultHero","steps","BreadcrumbList","map","item","index","DropDownHeader","shadows","inset","input","DropDownListContainer","zIndices","dropdown","sm","DropDownContainer","props","isOpen","css","DropDownList","ul","ListItem","li","Select","containerRef","useRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","event","stopPropagation","useEffect","current","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","ref","onClick","ml","option","selectedIndex"],"mappings":"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","file":"static/js/18.c5b662e2.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport validator from 'validator'\nimport { Text, Flex, Heading, Box, Input, Button } from \"hertz-uikit\"\nimport Container from \"components/layout/Container\"\nimport Select from 'components/Select/select'\nimport Divider from \"../General/Divider\"\nimport VaultHero from \"../General/VaultHero\"\nimport BreadcrumbList from \"../General/BreadcrumbList\"\nimport Questions from \"../General/Questions\"\n\nconst Vault = () => {\n    const [vaultName, setVaultName] = useState(\"\");\n    const [validVaultName, setValidVaultName] = useState(true);\n\n    const validateAllFields = (field: string, fieldValue: string) => {\n        if (field === 'vault') {\n            setVaultName(fieldValue)\n            if (validator.isLength(fieldValue, { min: 3, max: 30 })) {\n                setValidVaultName(true)\n            } else {\n                setValidVaultName(false)\n            }\n        }\n    }\n\n    const handleIsValid = (e, field: string) => {\n        validateAllFields(field, e.currentTarget.value);\n    }\n\n    const onBlurValidate = (field: string) => {\n        const fieldMapping = {\n            'vault': vaultName,\n        }\n        validateAllFields(field, fieldMapping[field])\n    }\n\n    return (\n        <div>\n            <VaultHero />\n\n            <Container style={{ marginTop: \"20px\" }}>\n                <BreadcrumbList step={0} />\n\n                <Divider />\n\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"10px\" mb=\"5px\">\n                        Basics\n                    </Heading>\n\n                    <Flex>\n                        <Text mr=\"2px\">Basic vault settings. </Text>\n                        <Text bold>Basic settings cannot be changed after creation.</Text>\n                    </Flex>\n                </Flex>\n\n                <Box mt=\"20px\">\n                    <div style={{ marginBottom: '10px' }}>\n                        <Text mb=\"5px\">Name</Text>\n                        <Box width=\"50%\">\n                            <Input placeholder=\"Enter your vault name...\"\n                                value={vaultName}\n                                onChange={(e) => handleIsValid(e, 'vault')}\n                                onBlur={() => onBlurValidate('vault')}\n                                required\n                                isSuccess={validVaultName}\n                                isWarning={!validVaultName} />\n                        </Box>\n\n                        {!validVaultName && (\n                            <Text color=\"failure\" fontSize=\"15px\" mt=\"5px\">\n                                Sorry! The vault name should be at least 3 characters\n                            </Text>\n                        )}\n                    </div>\n\n                    <div style={{ marginBottom: '10px' }}>\n                        <Text mb=\"5px\">Denomination Asset</Text>\n                        <Select\n                            options={[\n                                {\n                                    value: 'WBTC',\n                                    label: 'Wrapped BTC',\n                                    src: \"./images/asset/token/wbtc.png\"\n                                },\n                                {\n                                    value: 'WETH',\n                                    label: 'Wrapped ETH',\n                                    src: \"./images/asset/token/weth.png\"\n                                },\n                                {\n                                    value: 'USDC',\n                                    label: 'USD Coin',\n                                    src: \"./images/asset/token/usdc.png\"\n                                },\n                                {\n                                    value: 'Alpha',\n                                    label: 'Alpha Token',\n                                    src: \"./images/asset/token/alpha.png\"\n                                },\n                                {\n                                    value: '1Inch',\n                                    label: '1INCH Token',\n                                    src: \"./images/asset/token/1inch.png\"\n                                },\n                                {\n                                    value: 'UNI',\n                                    label: 'Uniswap',\n                                    src: \"./images/asset/token/uni.png\"\n                                },\n                                {\n                                    value: 'USDT',\n                                    label: 'Tether USD',\n                                    src: \"./images/asset/token/usdt.png\"\n                                },\n                                {\n                                    value: 'MATIC',\n                                    label: 'Matic Token',\n                                    src: \"./images/asset/token/matic.png\"\n                                }\n                            ]}\n                        />\n                    </div>\n\n                    <Box>\n                        <Text>\n                            The denomination asset is the asset in which depositors deposit into your vault and in which the vault&apos;s share price and the performance are measured.\n                        </Text>\n                    </Box>\n\n                    <Box mt=\"10px\">\n                        <Button disabled={!validVaultName} as={Link} to=\"/assets/setup/1\">Next</Button>\n                    </Box>\n                </Box>\n\n                <Questions />\n            </Container>\n        </div>\n    )\n}\n\nexport default Vault","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"https://docs.leekdao.xyz\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import React from \"react\"\nimport Hero from \"./Hero\"\n\nconst VaultHero = () => {\n    const title = \"Create Your Vault\"\n    const heading = \"Your future asset management\"\n\n    return (\n        <Hero title={title} heading={heading} />\n    )\n}\n\nexport default VaultHero\n\n","import React from \"react\"\nimport { Breadcrumbs, Text } from \"hertz-uikit\"\n\nconst steps = ['Basic', 'Fees (optional)', 'Deposits (optional)', 'Redemptions (optional)', 'Advanced Settings (optional)', 'Review']\n\ninterface CurrentStepProps {\n    step: number\n}\n\nconst BreadcrumbList: React.FC<CurrentStepProps> = ({ step }) => {\n    return (\n        <Breadcrumbs>\n            {steps.map((item, index) => {\n                return (\n                    <Text key={item} color={index <= step ? 'text' : 'textDisabled'}>\n                        {item}\n                    </Text>\n                )\n            })}\n        </Breadcrumbs>\n    )\n}\n\nexport default BreadcrumbList","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text, Flex } from 'hertz-uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid 1px solid rgb(215, 202, 236);\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 50%;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid 1px solid rgb(215, 202, 236);\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid 1px solid rgb(215, 202, 236);\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: 1px solid rgb(215, 202, 236);\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  src?: string\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          {\n            options[selectedOptionIndex].src ? <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n              <img src={options[selectedOptionIndex].src} alt={options[selectedOptionIndex].label} width=\"30px\" />\n              <Text ml=\"10px\">{options[selectedOptionIndex].label}</Text>\n            </Flex> : <Text>{options[selectedOptionIndex].label}</Text>\n          }\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                {option.src ?\n                  <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                    <img src={option.src} alt={option.label} width=\"30px\" />\n                    <Text ml=\"10px\">{option.label}</Text>\n                  </Flex>\n                  : <Text>{option.label}</Text>\n                }\n\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select"],"sourceRoot":""}