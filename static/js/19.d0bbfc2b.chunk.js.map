{"version":3,"sources":["views/Asset/Components/Details/VaultDeposits.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/VaultHero.tsx","views/Asset/Components/General/BreadcrumbList.tsx","utils/truncateWalletAddress.ts"],"names":["ToggleWrapper","styled","div","Text","VaultDeposits","useState","isPersonLimit","setIsPersonLimit","isAmountLimit","setIsAmountLimit","maxAmount","setMaxAmount","minAmount","setMinAmount","walletList","setWalletList","style","marginTop","step","width","flexDirection","alignItems","justifyContent","size","color","mt","mb","bold","display","marginLeft","checked","onChange","mr","value","placeholder","e","target","variant","onClick","truncateWalletAddress","readOnly","disabled","ml","as","Link","to","Divider","theme","colors","borderColor","StyledHero","Box","Title","Heading","attrs","primary","Image","mediaQueries","lg","Hero","title","heading","pr","InlineLink","Questions","marginBottom","maxWidth","src","alt","href","VaultHero","steps","BreadcrumbList","map","item","index","address","startLength","endLength","substring","length"],"mappings":"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","file":"static/js/19.d0bbfc2b.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport Container from \"components/layout/Container\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { Flex, Heading, Text, Toggle, InfoIcon, Box, Input, Button } from \"hertz-uikit\"\nimport truncateWalletAddress from \"utils/truncateWalletAddress\"\nimport Select from 'components/Select/select'\nimport VaultHero from \"../General/VaultHero\"\nimport BreadcrumbList from \"../General/BreadcrumbList\"\nimport Divider from \"../General/Divider\"\nimport Questions from \"../General/Questions\"\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n  margin-top:20px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst VaultDeposits = () => {\n    const [isPersonLimit, setIsPersonLimit] = useState(false)\n    const [isAmountLimit, setIsAmountLimit] = useState(false)\n    const [maxAmount, setMaxAmount] = useState(false)\n    const [minAmount, setMinAmount] = useState(false)\n    const [walletList, setWalletList] = useState(\"\");\n\n\n    return (\n        <div>\n            <VaultHero />\n            <Container style={{ marginTop: \"20px\" }}>\n                <BreadcrumbList step={2} />\n\n                <Divider />\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"10px\" mb=\"5px\">\n                        Deposits (optional)\n                    </Heading>\n\n                    <Flex>\n                        <Text>Deposits can be subject to restrictions, such as who is allowed to deposit, and what amounts they can deposit.\n                            <Text bold style={{ display: \"inline\", marginLeft: \"5px\" }}>Deposit settings can be changed at any time.</Text>\n                        </Text>\n                    </Flex>\n\n                    <ToggleWrapper>\n                        <Toggle checked={isPersonLimit} onChange={() => setIsPersonLimit(!isPersonLimit)} />\n                        <Text mr=\"5px\">Limit who can deposit</Text>\n                        <InfoIcon />\n                    </ToggleWrapper>\n\n                    {\n                        isPersonLimit && <div >\n                            <Box mt=\"10px\">\n                                <Text>Adding Ethereum addresses to the whitelist specifically permissions those addresses to deposit into the vault. Note that if this policy is enabled, depositors who are NOT on the list will not be able to deposit into the vault.</Text>\n                            </Box>\n\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">Depositor Whitelist</Text>\n                                <Box width=\"50%\">\n                                    <Input value={walletList} placeholder=\"Enter address...\" onChange={(e) => setWalletList(e.target.value)} />\n                                    <Button size=\"sm\" variant=\"secondary\" mt=\"10px\" onClick={() => setWalletList(truncateWalletAddress(\"0xB232D899b39Ee282EC26BBA385497b9FCD150ED3\"))}>Add Manager Wallet</Button>\n                                </Box>\n                            </Box>\n                        </div>\n                    }\n\n\n                    <ToggleWrapper>\n                        <Toggle checked={isAmountLimit} onChange={() => setIsAmountLimit(!isAmountLimit)} />\n                        <Text mr=\"5px\">Limit deposit amount</Text>\n                        <InfoIcon />\n                    </ToggleWrapper>\n\n                    {\n                        isAmountLimit && <div>\n                            <Box mt=\"10px\">\n                                <Text mb=\"10px\">You can set upper and/or lower limits on individual deposits. In addition, you can also reject all deposits.</Text>\n\n                                <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                                    <Toggle checked={minAmount} onChange={() => setMinAmount(!minAmount)} />\n\n                                    <Box width=\"50%\" style={{ marginLeft: \"10px\" }}>\n                                        <Text mb=\"5px\">Minimum Deposit Amount</Text>\n                                        <Input value=\"1 WBTC\" readOnly disabled={!minAmount} />\n                                    </Box>\n                                </Flex>\n\n                                <Flex alignItems=\"center\" justifyContent=\"flex-start\" mt=\"20px\">\n                                    <Toggle checked={maxAmount} onChange={() => setMaxAmount(!maxAmount)} />\n\n                                    <Box width=\"50%\" style={{ marginLeft: \"10px\" }}>\n                                        <Text mb=\"5px\">Maximum Deposit Amount</Text>\n                                        <Input value=\"10 WBTC\" readOnly disabled={!maxAmount} />\n                                    </Box>\n                                </Flex>\n\n                                <Divider />\n\n                                <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                                    <Toggle checked={!maxAmount || !minAmount} onChange={() => { setMaxAmount(false); setMinAmount(false); }} />\n                                    <Text ml=\"10px\" mr=\"5px\">Reject all deposits</Text>\n                                    <InfoIcon />\n                                </Flex>\n                            </Box>\n                        </div>\n                    }\n\n                    <Box mt=\"20px\">\n                        <Button as={Link} to=\"/assets/setup/3\">Next</Button>\n                    </Box>\n\n                </Flex>\n\n                <Questions />\n            </Container>\n\n        </div >\n\n    )\n}\nexport default VaultDeposits","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"#\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import React from \"react\"\nimport Hero from \"./Hero\"\n\nconst VaultHero = () => {\n    const title = \"Create Your Vault\"\n    const heading = \"Your future asset management\"\n\n    return (\n        <Hero title={title} heading={heading} />\n    )\n}\n\nexport default VaultHero\n\n","import React from \"react\"\nimport { Breadcrumbs, Text } from \"hertz-uikit\"\n\nconst steps = ['Basic', 'Fees (optional)', 'Deposits (optional)', 'Redemptions (optional)', 'Advanced Settings (optional)', 'Review']\n\ninterface CurrentStepProps {\n    step: number\n}\n\nconst BreadcrumbList: React.FC<CurrentStepProps> = ({ step }) => {\n    return (\n        <Breadcrumbs>\n            {steps.map((item, index) => {\n                return (\n                    <Text key={item} color={index <= step ? 'text' : 'textDisabled'}>\n                        {item}\n                    </Text>\n                )\n            })}\n        </Breadcrumbs>\n    )\n}\n\nexport default BreadcrumbList","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n    return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress"],"sourceRoot":""}