{"version":3,"sources":["views/Asset/Components/General/MonitorRow.tsx","views/Asset/Components/Details/Monitor.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/Row.tsx","utils/truncateWalletAddress.ts","components/Select/select.tsx"],"names":["MonitorRow","index","token","name","address","imgSrc","amount","price","lockValue","Row","alignItems","justifyContent","src","alt","width","style","marginRight","size","fontSize","truncateWalletAddress","MonitorLayout","styled","BaseLayout","theme","mediaQueries","sm","StyledIconContainer","Box","StyledIcon","img","StyledMonitorCard","Card","monitorFigure","title","value","Monitor","Hero","heading","Container","map","item","flexDirection","color","mt","mb","bold","textTransform","placeholder","options","label","monitor","toLowerCase","id","Questions","Divider","div","colors","borderColor","StyledHero","Title","Heading","attrs","as","primary","Image","lg","pr","InlineLink","Link","marginBottom","maxWidth","mr","href","marginLeft","target","NameColumn","AumColumn","TopAssetsColumn","InceptionColumn","MonthColumn","DayColumn","WeekColumn","Grid","startLength","endLength","substring","length","DropDownHeader","shadows","inset","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","props","isOpen","css","DropDownList","ul","ListItem","li","Select","onChange","containerRef","useRef","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","event","stopPropagation","useEffect","current","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","ref","onClick","ml","option","selectedIndex"],"mappings":"q7DAiDeA,EAjCyB,SAAC,GAAuE,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC3F,OACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,UAAOR,MAEX,cAAC,IAAD,UACI,eAAC,IAAD,CAAMS,WAAW,SAASC,eAAe,aAAzC,UACI,qBAAKC,IAAKP,EAAQQ,IAAKX,EAAOY,MAAM,OAAOC,MAAO,CAAEC,YAAa,SACjE,eAAC,IAAD,WACI,cAAC,IAAD,CAASC,KAAK,KAAd,SAAoBf,IACpB,cAAC,IAAD,CAAMgB,SAAS,OAAf,SAAuBf,YAInC,cAAC,IAAD,UACI,cAAC,IAAD,UAAOgB,YAAsBf,OAEjC,cAAC,IAAD,UACI,cAAC,IAAD,UAAOE,MAGX,cAAC,IAAD,UACI,cAAC,IAAD,UAAOC,MAGX,cAAC,IAAD,CAAKQ,MAAO,CAAED,MAAO,SAArB,SACI,cAAC,IAAD,UAAON,U,4BChCjBY,EAAgBC,YAAOC,IAAPD,CAAH,yOAMf,qBAAGE,MAAkBC,aAAaC,MAShCC,EAAsBL,YAAOM,IAAPN,CAAH,oMASnBO,EAAaP,IAAOQ,IAAV,6HAQVC,EAAoBT,YAAOU,IAAPV,CAAH,2MAWjBW,EAAgB,CAClB,CACIC,MAAO,SACP5B,OAAQ,mCACR6B,MAAO,OAGX,CACID,MAAO,oBACP5B,OAAQ,oCACR6B,MAAO,kBAGX,CACID,MAAO,WACP5B,OAAQ,sCACR6B,MAAO,UA+HAC,UA3HC,WAGZ,OACI,gCACI,cAACC,EAAA,EAAD,CAAMH,MAJA,oBAIcI,QAHZ,mCAKR,cAACC,EAAA,EAAD,UACI,cAAClB,EAAD,UAEQY,EAAcO,KAAI,SAACC,GAAD,OACd,cAACV,EAAD,UACI,eAAC,IAAD,CAAMpB,WAAW,SAASC,eAAe,aAAzC,UACI,cAACe,EAAD,UACI,cAACE,EAAD,CAAYhB,IAAK4B,EAAKnC,OAAQQ,IAAK2B,EAAKP,UAG5C,eAAC,IAAD,WACI,cAAC,IAAD,UAAUO,EAAKP,QACf,cAAC,IAAD,UAAOO,EAAKN,eARAM,EAAKP,cAiB7C,eAACK,EAAA,EAAD,WACI,cAAC,IAAD,CAAMxB,MAAM,OAAO2B,cAAc,SAAS/B,WAAW,QAAQC,eAAe,SAA5E,SACI,cAAC,IAAD,CAASM,KAAK,KAAKyB,MAAM,YAAYC,GAAG,OAAOC,GAAG,MAAlD,8BAKJ,eAAC,IAAD,CAAM9B,MAAM,OAAOJ,WAAW,SAASC,eAAe,gBAAgBiC,GAAG,OAAzE,UACI,sBAAK7B,MAAO,CAAED,MAAO,SAArB,UACI,cAAC,IAAD,CAAMI,SAAS,OAAO2B,MAAI,EAACH,MAAM,aAAaI,cAAc,YAA5D,0BAGA,cAAC,IAAD,CAAOC,YAAY,iBAGvB,gCACI,cAAC,IAAD,CAAM7B,SAAS,OAAO2B,MAAI,EAACH,MAAM,aAAaI,cAAc,YAA5D,qBAGA,8BACI,cAAC,IAAD,CACIE,QAAS,CACL,CACIC,MAAO,OACPf,MAAO,QAEX,CACIe,MAAO,SACPf,MAAO,UAEX,CACIe,MAAO,QACPf,MAAO,SAEX,CACIe,MAAO,aACPf,MAAO,yBAS/B,eAAC,IAAD,WACI,eAACzB,EAAA,EAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMS,SAAS,OAAOwB,MAAM,aAAaI,cAAc,YAAYD,MAAI,EAAvE,uBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAM3B,SAAS,OAAOwB,MAAM,aAAaI,cAAc,YAAYD,MAAI,EAAvE,oBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAM3B,SAAS,OAAOwB,MAAM,aAAaI,cAAc,YAAYD,MAAI,EAAvE,uBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAM3B,SAAS,OAAOwB,MAAM,aAAaI,cAAc,YAAYD,MAAI,EAAvE,sBAKJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAM3B,SAAS,OAAOwB,MAAM,aAAaI,cAAc,YAAYD,MAAI,EAAvE,6BAKJ,cAAC,IAAD,CAAK9B,MAAO,CAAED,MAAO,SAArB,SACI,cAAC,IAAD,CAAMI,SAAS,OAAOwB,MAAM,aAAaI,cAAc,YAAYD,MAAI,EAAvE,qCAOJK,EAAQX,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAA0BnC,OAAM,+BAA0BmC,EAAKtC,MAAMiD,cAArC,QAA0DhD,KAAMqC,EAAKrC,KAAMC,QAASoC,EAAKpC,QAASE,OAAQkC,EAAKlC,OAAQC,MAAOiC,EAAKjC,MAAOC,UAAWgC,EAAKhC,UAAWN,MAAOsC,EAAKtC,MAAOD,MAAOuC,EAAKY,IAAnNZ,EAAKY,UAKlC,cAACC,EAAA,EAAD,Y,+CC3LVC,E,KAAUjC,EAAOkC,IAAV,yGACS,qBAAGhC,MAAkBiC,OAAOC,eAMnCH,O,0FCCTI,EAAarC,YAAOM,IAAPN,CAAH,iJAMVsC,EAAQtC,YAAOuC,KAASC,MAAM,CAAEC,GAAI,KAAM7C,KAAM,MAAxCI,CAAH,uFACA,qBAAGE,MAAkBiC,OAAOO,WAKlB1C,YAAO2C,IAAP3C,CAAH,mFAGd,qBAAGE,MAAkBC,aAAayC,MAwBvB7B,IAnBmB,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAOI,EAAc,EAAdA,QACxC,OACI,cAACqB,EAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMhD,WAAW,SAASC,eAAe,gBAAzC,SACI,eAAC,IAAD,CAAKuD,GAAG,OAAR,UACI,cAACP,EAAD,UACK1B,IAEL,cAAC,IAAD,CAASW,GAAG,OAAZ,SACKP,e,sFCpCvB8B,EAAa9C,YAAO+C,IAAP/C,CAAH,gDA4BDgC,IAxBG,WACd,OACI,eAAC,IAAD,CAAKvC,MAAM,OAAOC,MAAO,CAAEsD,aAAc,QAAzC,UACI,cAAC,IAAD,IACA,eAAC,IAAD,CAAM1D,eAAe,SAASD,WAAW,SAAS+B,cAAe,CAAC,SAAU,SAAU,OAAtF,UACI,cAAC,IAAD,CAAM6B,SAAS,QAAQC,GAAG,MAAM3B,GAAG,OAAnC,SACI,qBAAKhC,IAAI,gCAAgCC,IAAI,eAEjD,eAAC,IAAD,CAAMyD,SAAS,QAAQ7B,cAAc,SAArC,UACI,cAAC,IAAD,CAASG,GAAG,OAAZ,kCAGA,eAAC,IAAD,yCAEI,cAACuB,EAAD,CAAYK,KAAK,2BAA2BC,WAAW,MAAMC,OAAO,SAApE,iD,0TCpBXC,EAAatD,YAAOM,KAAKkC,MAAM,CAAEnD,WAAY,UAAhCW,CAAH,gDAIVuD,EAAYvD,YAAOM,IAAPN,CAAH,+CAITwD,EAAkBxD,YAAOM,IAAPN,CAAH,oDAIfyD,EAAkBzD,YAAOM,IAAPN,CAAH,qDAIf0D,EAAc1D,YAAOM,IAAPN,CAAH,iDAIX2D,EAAY3D,YAAOM,IAAPN,CAAH,+CAIT4D,EAAa5D,YAAOM,IAAPN,CAAH,gDAIjBZ,EAAMY,YAAO6D,IAAP7D,CAAH,sSACoB,qBAAGE,MAAkBiC,OAAOC,eAMrD,qBAAGlC,MAAkBC,aAAaC,MAMvBhB,O,iCCrCAU,IAJe,SAACf,GAAqD,IAApC+E,EAAmC,uDAArB,EAAGC,EAAkB,uDAAN,EACzE,MAAM,GAAN,OAAUhF,EAAQiF,UAAU,EAAGF,GAA/B,cAAiD/E,EAAQiF,UAAUjF,EAAQkF,OAASF,M,uGCAlFG,EAAiBlE,IAAOkC,IAAV,uTAOJ,qBAAGhC,MAAkBiE,QAAQC,SAG7B,qBAAGlE,MAAkBiC,OAAOkC,SAItCC,EAAwBtE,IAAOkC,IAAV,wTAKX,qBAAGhC,MAAkBiC,OAAOkC,SAC/B,qBAAGnE,MAAkBqE,SAASC,YAOvC,qBAAGtE,MAAkBC,aAAaC,MAKhCqE,EAAoBzE,IAAOkC,IAAV,0VAEZ,qBAAGzC,SAEE,qBAAGS,MAAkBiC,OAAOkC,SAMxC,qBAAGnE,MAAkBC,aAAaC,MAIlC,SAACsE,GAAD,OACAA,EAAMC,QACNC,YADA,6XAEIV,EAKAI,MAkBFO,EAAe7E,IAAO8E,GAAV,qGAIL,qBAAG5E,MAAkBqE,SAASC,YAGrCO,EAAW/E,IAAOgF,GAAV,wIA2FCC,IAxEsC,SAAC,GAA2B,IAAzBtD,EAAwB,EAAxBA,QAASuD,EAAe,EAAfA,SACzDC,EAAeC,iBAAO,MACtBC,EAAcD,iBAAO,MAC3B,EAA4BE,oBAAS,GAArC,mBAAOX,EAAP,KAAeY,EAAf,KACA,EAAsDD,mBAAS,GAA/D,mBAAOE,EAAP,KAA4BC,EAA5B,KACA,EAA0CH,mBAAS,CAAE7F,MAAO,EAAGiG,OAAQ,IAAvE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,SAACC,GAChBP,GAAWZ,GACXmB,EAAMC,mBA4BR,OAhBAC,qBAAU,WACRJ,EAAiB,CACfnG,MAAO4F,EAAYY,QAAQC,YAC3BR,OAAQL,EAAYY,QAAQE,eAG9B,IAAMC,EAAqB,WACzBb,GAAU,IAIZ,OADAc,SAASC,iBAAiB,QAASF,GAC5B,WACLC,SAASE,oBAAoB,QAASH,MAEvC,IAGD,eAAC3B,EAAD,yBAAmBE,OAAQA,EAAQ6B,IAAKrB,GAAkBQ,GAA1D,cAC2B,IAAxBA,EAAclG,OACb,cAACyE,EAAD,CAAgBuC,QAASZ,EAAzB,SAEIlE,EAAQ6D,GAAqBjG,IAAM,eAAC,IAAD,CAAMF,WAAW,SAASC,eAAe,aAAzC,UACjC,qBAAKC,IAAKoC,EAAQ6D,GAAqBjG,IAAKC,IAAKmC,EAAQ6D,GAAqB5D,MAAOnC,MAAM,SAC3F,cAAC,IAAD,CAAMiH,GAAG,OAAT,SAAiB/E,EAAQ6D,GAAqB5D,WACtC,cAAC,IAAD,UAAOD,EAAQ6D,GAAqB5D,UAIpD,cAAC,IAAD,CAAmBP,MAAM,OAAOoF,QAASZ,IACzC,cAACvB,EAAD,UACE,cAACO,EAAD,CAAc2B,IAAKnB,EAAnB,SACG1D,EAAQT,KAAI,SAACyF,EAAQ/H,GAAT,OACXA,IAAU4G,EACR,cAACT,EAAD,CAAU0B,SA1CGG,EA0CsBhI,EA1CI,WACjD6G,EAAuBmB,GACvBrB,GAAU,GAENL,GACFA,EAASvD,EAAQiF,MAqCT,SACGD,EAAOpH,IACN,eAAC,IAAD,CAAMF,WAAW,SAASC,eAAe,aAAzC,UACE,qBAAKC,IAAKoH,EAAOpH,IAAKC,IAAKmH,EAAO/E,MAAOnC,MAAM,SAC/C,cAAC,IAAD,CAAMiH,GAAG,OAAT,SAAiBC,EAAO/E,WAExB,cAAC,IAAD,UAAO+E,EAAO/E,SAN4B+E,EAAO/E,OAUrD,KApDU,IAACgF","file":"static/js/14.4826c5a0.chunk.js","sourcesContent":["import React from 'react'\nimport { Flex, Text, Box, Heading } from 'hertz-uikit'\nimport truncateWalletAddress from \"utils/truncateWalletAddress\"\nimport Row, { NameColumn, AumColumn, TopAssetsColumn, InceptionColumn } from \"./Row\"\n\ninterface ListProps {\n    index: string\n    token: string,\n    name: string,\n    address: string,\n    imgSrc: string,\n    amount: string,\n    price: string,\n    lockValue: string\n}\n\nconst MonitorRow: React.FC<ListProps> = ({ index, token, name, address, imgSrc, amount, price, lockValue }) => {\n    return (\n        <Row>\n            <Box>\n                <Text>{index}</Text>\n            </Box>\n            <NameColumn>\n                <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                    <img src={imgSrc} alt={token} width=\"32px\" style={{ marginRight: \"5px\" }} />\n                    <Box>\n                        <Heading size=\"sm\">{token}</Heading>\n                        <Text fontSize=\"12px\">{name}</Text>\n                    </Box>\n                </Flex>\n            </NameColumn>\n            <AumColumn>\n                <Text>{truncateWalletAddress(address)}</Text>\n            </AumColumn>\n            <TopAssetsColumn>\n                <Text>{amount}</Text>\n            </TopAssetsColumn>\n\n            <InceptionColumn>\n                <Text>{price}</Text>\n            </InceptionColumn>\n\n            <Box style={{ width: \"150px\" }}>\n                <Text>{lockValue}</Text>\n            </Box>\n        </Row>\n    )\n}\n\nexport default MonitorRow","import React from \"react\"\nimport styled from \"styled-components\"\nimport Container from \"components/layout/Container\"\nimport Select, { OptionProps } from 'components/Select/select'\nimport { Text, Card, Flex, Heading, BaseLayout, Box, Input } from \"hertz-uikit\"\nimport Row, { NameColumn, AumColumn, TopAssetsColumn, InceptionColumn } from \"../General/Row\"\nimport MonitorRow from \"../General/MonitorRow\"\nimport Hero from \"../General/Hero\"\nimport monitor from \"../../Constants/monitor.json\"\nimport Questions from \"../General/Questions\"\n\nconst MonitorLayout = styled(BaseLayout)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 30px;\n  margin: 30px auto;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 768px) {\n    padding: 30px;\n  }\n`\n\nconst StyledIconContainer = styled(Box)`\n  background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  width:50px;\n  height:50px;\n  border-radius:10px;\n  position:relative;\n  margin-right:5px;\n`\n\nconst StyledIcon = styled.img`\n  position:absolute;\n  width:32px;\n  top:9px;\n  left:9px;\n  filter:brightness(0) invert(1);\n`\n\nconst StyledMonitorCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding:20px;\n  width: 100%;\n  height:100px;\n  border-radius:15px;\n  display:flex;\n  align-items:center;\n`\n\nconst monitorFigure = [\n    {\n        title: \"Vaults\",\n        imgSrc: \"./images/asset/network/vault.svg\",\n        value: \"785\"\n    },\n\n    {\n        title: \"Assets Management\",\n        imgSrc: \"./images/asset/network/assets.svg\",\n        value: \"$91,918,973.21\"\n    },\n\n    {\n        title: \"Deposits\",\n        imgSrc: \"./images/asset/network/deposits.svg\",\n        value: \"1,830\"\n    },\n]\n\nconst Monitor = () => {\n    const title = \"Explore and Learn\"\n    const heading = \"Monitor the assets at any time\"\n    return (\n        <div>\n            <Hero title={title} heading={heading} />\n\n            <Container>\n                <MonitorLayout>\n                    {\n                        monitorFigure.map((item) => (\n                            <StyledMonitorCard key={item.title}>\n                                <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                                    <StyledIconContainer>\n                                        <StyledIcon src={item.imgSrc} alt={item.title} />\n                                    </StyledIconContainer>\n\n                                    <Box>\n                                        <Heading>{item.title}</Heading>\n                                        <Text>{item.value}</Text>\n                                    </Box>\n                                </Flex>\n                            </StyledMonitorCard>\n                        ))\n                    }\n                </MonitorLayout>\n            </Container>\n\n            <Container>\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"10px\" mb=\"5px\">\n                        Assets Monitor\n                    </Heading>\n                </Flex>\n\n                <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mb=\"20px\">\n                    <div style={{ width: \"300px\" }}>\n                        <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                            Search Funds\n                        </Text>\n                        <Input placeholder=\"Search...\" />\n                    </div>\n\n                    <div>\n                        <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                            Sort by\n                        </Text>\n                        <div>\n                            <Select\n                                options={[\n                                    {\n                                        label: 'Name',\n                                        value: 'Name',\n                                    },\n                                    {\n                                        label: 'Amount',\n                                        value: 'Amount',\n                                    },\n                                    {\n                                        label: 'Price',\n                                        value: 'Price',\n                                    },\n                                    {\n                                        label: 'Lock Value',\n                                        value: 'Lock Value',\n                                    },\n                                ]}\n                            />\n                        </div>\n                    </div>\n\n                </Flex>\n\n                <Card>\n                    <Row>\n                        <Box>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                # Index\n                            </Text>\n                        </Box>\n                        <NameColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                NAME\n                            </Text>\n                        </NameColumn>\n                        <AumColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                ADDRESS\n                            </Text>\n                        </AumColumn>\n                        <TopAssetsColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                Amount\n                            </Text>\n                        </TopAssetsColumn>\n\n                        <InceptionColumn>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                Current Price\n                            </Text>\n                        </InceptionColumn>\n\n                        <Box style={{ width: \"150px\" }}>\n                            <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                                Total Value Locked\n                            </Text>\n                        </Box>\n                    </Row>\n\n                    {\n                        monitor.map((item) => (\n                            <MonitorRow key={item.id} imgSrc={`./images/asset/token/${item.token.toLowerCase()}.png`} name={item.name} address={item.address} amount={item.amount} price={item.price} lockValue={item.lockValue} token={item.token} index={item.id} />\n                        ))\n                    }\n                </Card>\n\n                <Questions />\n            </Container>\n        </div>\n    )\n\n}\n\nexport default Monitor","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"https://docs.leekdao.xyz\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import styled from 'styled-components'\nimport { Grid, Box } from 'hertz-uikit'\n\nexport const NameColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: name;\n`\n\nexport const AumColumn = styled(Box)`\n  grid-area: aum;\n`\n\nexport const TopAssetsColumn = styled(Box)`\n  grid-area: topAsset;\n`\n\nexport const InceptionColumn = styled(Box)`\n  grid-area: inception;\n`\n\nexport const MonthColumn = styled(Box)`\n  grid-area: month;\n`\n\nexport const DayColumn = styled(Box)`\n  grid-area: day;\n`\n\nexport const WeekColumn = styled(Box)`\n  grid-area: week;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  grid-gap: 8px;\n  grid-template-areas: 'id name aum topAsset inception month day week';\n  grid-template-columns:1fr 4fr 2fr 2fr 2fr 1fr 1fr 1fr;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 20px;\n    padding: 20px 24px;\n  }\n`\n\nexport default Row","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n    return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text, Flex } from 'hertz-uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid 1px solid rgb(215, 202, 236);\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 50%;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid 1px solid rgb(215, 202, 236);\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid 1px solid rgb(215, 202, 236);\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: 1px solid rgb(215, 202, 236);\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  src?: string\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          {\n            options[selectedOptionIndex].src ? <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n              <img src={options[selectedOptionIndex].src} alt={options[selectedOptionIndex].label} width=\"30px\" />\n              <Text ml=\"10px\">{options[selectedOptionIndex].label}</Text>\n            </Flex> : <Text>{options[selectedOptionIndex].label}</Text>\n          }\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                {option.src ?\n                  <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                    <img src={option.src} alt={option.label} width=\"30px\" />\n                    <Text ml=\"10px\">{option.label}</Text>\n                  </Flex>\n                  : <Text>{option.label}</Text>\n                }\n\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select"],"sourceRoot":""}