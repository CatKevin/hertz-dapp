{"version":3,"sources":["views/Asset/Components/Details/Redemption.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/VaultHero.tsx","views/Asset/Components/General/BreadcrumbList.tsx"],"names":["ToggleWrapper","styled","div","Text","Redemption","useState","withdrawWindow","setWithdrawWindow","duration","setDuration","style","marginTop","step","width","flexDirection","alignItems","justifyContent","size","color","mt","mb","bold","display","marginLeft","checked","onChange","mr","readOnly","value","placeholder","e","target","as","Link","to","Divider","theme","colors","borderColor","StyledHero","Box","Title","Heading","attrs","primary","Image","mediaQueries","lg","Hero","title","heading","pr","InlineLink","Questions","marginBottom","maxWidth","src","alt","href","VaultHero","steps","BreadcrumbList","map","item","index"],"mappings":"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","file":"static/js/24.55c4a895.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport Container from \"components/layout/Container\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { Flex, Heading, Text, Toggle, InfoIcon, Box, Input, Button } from \"hertz-uikit\"\nimport Select from 'components/Select/select'\nimport VaultHero from \"../General/VaultHero\"\nimport BreadcrumbList from \"../General/BreadcrumbList\"\nimport Divider from \"../General/Divider\"\nimport Questions from \"../General/Questions\"\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n  margin-top:20px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst Redemption = () => {\n    const [withdrawWindow, setWithdrawWindow] = useState(false)\n    const [duration, setDuration] = useState(\"\");\n\n    return (\n        <div>\n            <VaultHero />\n            <Container style={{ marginTop: \"20px\" }}>\n                <BreadcrumbList step={3} />\n\n                <Divider />\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"10px\" mb=\"5px\">\n                        Redemptions (optional)\n                    </Heading>\n\n\n                    <Text>In principle withdrawals can happen any time. However, in some cases where a trade doesn’t settle instantly (like on Synthetix), there may be short time windows of a few minutes when depositors can’t withdraw their shares.</Text>\n\n                    <Text mt=\"10px\">A guaranteed redemption window can protect depositors from not being able to withdraw. It is recommended in cases where Synthetix assets are frequently traded.\n                        <Text bold style={{ display: \"inline\", marginLeft: \"5px\" }}>The Guaranteed Redemption Window cannot be changed after creation.</Text>\n                    </Text>\n\n\n                    <ToggleWrapper>\n                        <Toggle checked={withdrawWindow} onChange={() => setWithdrawWindow(!withdrawWindow)} />\n                        <Text mr=\"5px\">Provide a Guaranteed Withdrawal Window</Text>\n                        <InfoIcon />\n                    </ToggleWrapper>\n\n                    {\n                        withdrawWindow && <div>\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">The Guaranteed Redemption Policy ensures that the vault will have a daily time period during which depositors will be able to freely withdraw their shares or deposit more. During that period, the vault cannot trade on Synthetix.</Text>\n                                <Box width=\"50%\" style={{ marginTop: \"10px\" }}>\n                                    <Text>Window Start Time (UTC - 10)</Text>\n                                    <Input readOnly value=\"00:00\" />\n                                </Box>\n\n                                <Box width=\"50%\" style={{ marginTop: \"10px\" }}>\n                                    <Text>Duration</Text>\n                                    <Input value={duration} placeholder=\"60 minutes\" onChange={(e) => setDuration(e.target.value)} />\n                                </Box>\n                            </Box>\n                        </div>\n                    }\n\n                    <Box mt=\"10px\">\n                        <Button as={Link} to=\"/assets/setup/4\">Next</Button>\n                    </Box>\n                </Flex>\n\n                <Questions />\n            </Container>\n\n        </div >\n\n    )\n}\nexport default Redemption","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"#\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import React from \"react\"\nimport Hero from \"./Hero\"\n\nconst VaultHero = () => {\n    const title = \"Create Your Vault\"\n    const heading = \"Your future asset management\"\n\n    return (\n        <Hero title={title} heading={heading} />\n    )\n}\n\nexport default VaultHero\n\n","import React from \"react\"\nimport { Breadcrumbs, Text } from \"hertz-uikit\"\n\nconst steps = ['Basic', 'Fees (optional)', 'Deposits (optional)', 'Redemptions (optional)', 'Advanced Settings (optional)', 'Review']\n\ninterface CurrentStepProps {\n    step: number\n}\n\nconst BreadcrumbList: React.FC<CurrentStepProps> = ({ step }) => {\n    return (\n        <Breadcrumbs>\n            {steps.map((item, index) => {\n                return (\n                    <Text key={item} color={index <= step ? 'text' : 'textDisabled'}>\n                        {item}\n                    </Text>\n                )\n            })}\n        </Breadcrumbs>\n    )\n}\n\nexport default BreadcrumbList"],"sourceRoot":""}