{"version":3,"sources":["views/Asset/Components/Details/Fees.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/VaultHero.tsx","views/Asset/Components/General/BreadcrumbList.tsx","components/Select/select.tsx"],"names":["ToggleWrapper","styled","div","Text","Fees","useState","isManagementChecked","setIsManagementChecked","isPerformanceChecked","setIsPerformanceChecked","isEntranceChecked","setIsEntranceChecked","managementFee","setManagementFee","performanceFee","setPerformanceFee","crystallizationPeriod","setCrystallizationPeriod","entranceFee","setEntranceFee","style","marginTop","step","width","flexDirection","alignItems","justifyContent","size","color","mt","mb","bold","display","marginLeft","checked","onChange","mr","type","min","max","placeholder","value","e","target","options","label","as","Link","to","Divider","theme","colors","borderColor","StyledHero","Box","Title","Heading","attrs","primary","Image","mediaQueries","lg","Hero","title","heading","pr","InlineLink","Questions","marginBottom","maxWidth","src","alt","href","VaultHero","steps","BreadcrumbList","map","item","index","DropDownHeader","shadows","inset","input","DropDownListContainer","zIndices","dropdown","sm","DropDownContainer","props","isOpen","css","DropDownList","ul","ListItem","li","Select","containerRef","useRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","event","stopPropagation","useEffect","current","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","ref","onClick","ml","option","selectedIndex"],"mappings":"2PAWMA,EAAgBC,IAAOC,IAAV,mLAOfC,KAuIWC,UAlIF,WACT,MAAsDC,oBAAS,GAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAAwDF,oBAAS,GAAjE,mBAAOG,EAAP,KAA6BC,EAA7B,KACA,EAAkDJ,oBAAS,GAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KACA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAA4CR,mBAAS,IAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KACA,EAA0DV,mBAAS,IAAnE,mBAAOW,EAAP,KAA8BC,EAA9B,KACA,EAAsCZ,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAGA,OACI,gCACI,cAAC,IAAD,IACA,eAAC,IAAD,CAAWC,MAAO,CAAEC,UAAW,QAA/B,UACI,cAAC,IAAD,CAAgBC,KAAM,IAEtB,cAAC,IAAD,IACA,eAAC,IAAD,CAAMC,MAAM,OAAOC,cAAc,SAASC,WAAW,QAAQC,eAAe,SAA5E,UACI,cAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,YAAYC,GAAG,OAAOC,GAAG,MAAlD,6BAIA,cAAC,IAAD,UACI,eAAC,IAAD,wJACI,cAAC,IAAD,CAAMC,MAAI,EAACX,MAAO,CAAEY,QAAS,SAAUC,WAAY,OAAnD,iEAIR,eAACjC,EAAD,WACI,cAAC,IAAD,CAAQkC,QAAS5B,EAAqB6B,SAAU,kBAAM5B,GAAwBD,MAC9E,cAAC,IAAD,CAAM8B,GAAG,MAAT,mCACA,cAAC,IAAD,OAIA9B,GAAuB,gCACnB,cAAC,IAAD,CAAKuB,GAAG,OAAR,SACI,cAAC,IAAD,wPAGJ,eAAC,IAAD,CAAKA,GAAG,OAAR,UACI,cAAC,IAAD,CAAMC,GAAG,MAAT,iCACA,cAAC,IAAD,CAAKP,MAAM,MAAX,SACI,cAAC,IAAD,CAAOc,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAMC,YAAY,KAAKC,MAAO7B,EAAeuB,SAAU,SAACO,GACrF7B,EAAiB6B,EAAEC,OAAOF,kBAQ9C,eAACzC,EAAD,WACI,cAAC,IAAD,CAAQkC,QAAS1B,EAAsB2B,SAAU,kBAAM1B,GAAyBD,MAChF,cAAC,IAAD,CAAM4B,GAAG,MAAT,oCACA,cAAC,IAAD,OAIA5B,GAAwB,gCACpB,cAAC,IAAD,CAAKqB,GAAG,OAAR,SACI,cAAC,IAAD,yRAGJ,eAAC,IAAD,CAAKA,GAAG,OAAR,UACI,cAAC,IAAD,CAAMC,GAAG,MAAT,kCACA,cAAC,IAAD,CAAKP,MAAM,MAAX,SACI,cAAC,IAAD,CAAOkB,MAAO3B,EAAgBuB,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAMC,YAAY,MAAML,SAAU,SAACO,GAAD,OAAO3B,EAAkB2B,EAAEC,OAAOF,eAIpI,eAAC,IAAD,CAAKZ,GAAG,OAAR,UACI,cAAC,IAAD,CAAMC,GAAG,MAAT,oCACA,cAAC,IAAD,CAAKP,MAAM,MAAX,SACI,cAAC,IAAD,CAAOkB,MAAOzB,EAAuBmB,SAAU,SAACO,GAAD,OAAOzB,EAAyByB,EAAEC,OAAOF,QAAQD,YAAY,qBAM5H,eAACxC,EAAD,WACI,cAAC,IAAD,CAAQkC,QAASxB,EAAmByB,SAAU,kBAAMxB,GAAsBD,MAC1E,cAAC,IAAD,CAAM0B,GAAG,MAAT,iCACA,cAAC,IAAD,OAIA1B,GAAqB,sBAAKU,MAAO,CAAEG,MAAO,QAArB,UACjB,cAAC,IAAD,CAAKM,GAAG,OAAR,SACI,cAAC,IAAD,yHAGJ,eAAC,IAAD,CAAKA,GAAG,OAAR,UACI,cAAC,IAAD,CAAMC,GAAG,MAAT,+BACA,cAAC,IAAD,CAAKP,MAAM,MAAX,SACI,cAAC,IAAD,CAAOkB,MAAOvB,EAAaiB,SAAU,SAACO,GAAD,OAAOvB,EAAeuB,EAAEC,OAAOF,QAAQD,YAAY,KAAKH,KAAK,SAASC,IAAI,IAAIC,IAAI,aAI/H,eAAC,IAAD,CAAKV,GAAG,OAAR,UACI,cAAC,IAAD,CAAMC,GAAG,MAAT,uCACA,cAAC,IAAD,CACIc,QAAS,CACL,CACIH,MAAO,UACPI,MAAO,WAEX,CACIJ,MAAO,QACPI,MAAO,kBAQ/B,cAAC,IAAD,CAAKhB,GAAG,OAAR,SACI,cAAC,IAAD,CAAQiB,GAAIC,IAAMC,GAAG,kBAArB,uBAKR,cAAC,IAAD,Y,+CC/IVC,E,KAAUhD,EAAOC,IAAV,yGACS,qBAAGgD,MAAkBC,OAAOC,eAMnCH,O,0FCCTI,EAAapD,YAAOqD,IAAPrD,CAAH,iJAMVsD,EAAQtD,YAAOuD,KAASC,MAAM,CAAEX,GAAI,KAAMnB,KAAM,MAAxC1B,CAAH,uFACA,qBAAGiD,MAAkBC,OAAOO,WAKlBzD,YAAO0D,IAAP1D,CAAH,mFAGd,qBAAGiD,MAAkBU,aAAaC,MAwBvBC,IAnBmB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACxC,OACI,cAACX,EAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAM5B,WAAW,SAASC,eAAe,gBAAzC,SACI,eAAC,IAAD,CAAKuC,GAAG,OAAR,UACI,cAACV,EAAD,UACKQ,IAEL,cAAC,IAAD,CAASjC,GAAG,OAAZ,SACKkC,e,sFCpCvBE,EAAajE,YAAO8C,IAAP9C,CAAH,gDA4BDkE,IAxBG,WACd,OACI,eAAC,IAAD,CAAK5C,MAAM,OAAOH,MAAO,CAAEgD,aAAc,QAAzC,UACI,cAAC,IAAD,IACA,eAAC,IAAD,CAAM1C,eAAe,SAASD,WAAW,SAASD,cAAe,CAAC,SAAU,SAAU,OAAtF,UACI,cAAC,IAAD,CAAM6C,SAAS,QAAQjC,GAAG,MAAMN,GAAG,OAAnC,SACI,qBAAKwC,IAAI,gCAAgCC,IAAI,eAEjD,eAAC,IAAD,CAAMF,SAAS,QAAQ7C,cAAc,SAArC,UACI,cAAC,IAAD,CAASM,GAAG,OAAZ,kCAGA,eAAC,IAAD,yCAEI,cAACoC,EAAD,CAAYM,KAAK,2BAA2BvC,WAAW,MAAMU,OAAO,SAApE,iD,iCCvBxB,0BAYe8B,IATG,WAId,OACI,cAAC,IAAD,CAAMV,MAJI,oBAIUC,QAHR,mC,iCCLpB,yBAGMU,EAAQ,CAAC,QAAS,kBAAmB,sBAAuB,yBAA0B,+BAAgC,UAoB7GC,IAdoC,SAAC,GAAc,IAAZrD,EAAW,EAAXA,KAClD,OACI,cAAC,IAAD,UACKoD,EAAME,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,IAAD,CAAiBlD,MAAOkD,GAASxD,EAAO,OAAS,eAAjD,SACKuD,GADMA,U,uGCVzBE,EAAiB9E,IAAOC,IAAV,uTAOJ,qBAAGgD,MAAkB8B,QAAQC,SAG7B,qBAAG/B,MAAkBC,OAAO+B,SAItCC,EAAwBlF,IAAOC,IAAV,wTAKX,qBAAGgD,MAAkBC,OAAO+B,SAC/B,qBAAGhC,MAAkBkC,SAASC,YAOvC,qBAAGnC,MAAkBU,aAAa0B,MAKhCC,EAAoBtF,IAAOC,IAAV,0VAEZ,qBAAGqB,SAEE,qBAAG2B,MAAkBC,OAAO+B,SAMxC,qBAAGhC,MAAkBU,aAAa0B,MAIlC,SAACE,GAAD,OACAA,EAAMC,QACNC,YADA,6XAEIX,EAKAI,MAkBFQ,EAAe1F,IAAO2F,GAAV,qGAIL,qBAAG1C,MAAkBkC,SAASC,YAGrCQ,EAAW5F,IAAO6F,GAAV,wIA2FCC,IAxEsC,SAAC,GAA2B,IAAzBnD,EAAwB,EAAxBA,QAAST,EAAe,EAAfA,SACzD6D,EAAeC,iBAAO,MACtBC,EAAcD,iBAAO,MAC3B,EAA4B5F,oBAAS,GAArC,mBAAOoF,EAAP,KAAeU,EAAf,KACA,EAAsD9F,mBAAS,GAA/D,mBAAO+F,EAAP,KAA4BC,EAA5B,KACA,EAA0ChG,mBAAS,CAAEkB,MAAO,EAAG+E,OAAQ,IAAvE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,SAACC,GAChBP,GAAWV,GACXiB,EAAMC,mBA4BR,OAhBAC,qBAAU,WACRJ,EAAiB,CACfjF,MAAO2E,EAAYW,QAAQC,YAC3BR,OAAQJ,EAAYW,QAAQE,eAG9B,IAAMC,EAAqB,WACzBb,GAAU,IAIZ,OADAc,SAASC,iBAAiB,QAASF,GAC5B,WACLC,SAASE,oBAAoB,QAASH,MAEvC,IAGD,eAACzB,EAAD,yBAAmBE,OAAQA,EAAQ2B,IAAKpB,GAAkBO,GAA1D,cAC2B,IAAxBA,EAAchF,OACb,cAACwD,EAAD,CAAgBsC,QAASZ,EAAzB,SAEI7D,EAAQwD,GAAqB9B,IAAM,eAAC,IAAD,CAAM7C,WAAW,SAASC,eAAe,aAAzC,UACjC,qBAAK4C,IAAK1B,EAAQwD,GAAqB9B,IAAKC,IAAK3B,EAAQwD,GAAqBvD,MAAOtB,MAAM,SAC3F,cAAC,IAAD,CAAM+F,GAAG,OAAT,SAAiB1E,EAAQwD,GAAqBvD,WACtC,cAAC,IAAD,UAAOD,EAAQwD,GAAqBvD,UAIpD,cAAC,IAAD,CAAmBjB,MAAM,OAAOyF,QAASZ,IACzC,cAACtB,EAAD,UACE,cAACQ,EAAD,CAAcyB,IAAKlB,EAAnB,SACGtD,EAAQgC,KAAI,SAAC2C,EAAQzC,GAAT,OACXA,IAAUsB,EACR,cAACP,EAAD,CAAUwB,SA1CGG,EA0CsB1C,EA1CI,WACjDuB,EAAuBmB,GACvBrB,GAAU,GAENhE,GACFA,EAASS,EAAQ4E,MAqCT,SACGD,EAAOjD,IACN,eAAC,IAAD,CAAM7C,WAAW,SAASC,eAAe,aAAzC,UACE,qBAAK4C,IAAKiD,EAAOjD,IAAKC,IAAKgD,EAAO1E,MAAOtB,MAAM,SAC/C,cAAC,IAAD,CAAM+F,GAAG,OAAT,SAAiBC,EAAO1E,WAExB,cAAC,IAAD,UAAO0E,EAAO1E,SAN4B0E,EAAO1E,OAUrD,KApDU,IAAC2E","file":"static/js/17.e7c5c504.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport Container from \"components/layout/Container\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { Flex, Heading, Text, Toggle, InfoIcon, Box, Input, Button } from \"hertz-uikit\"\nimport Select from 'components/Select/select'\nimport VaultHero from \"../General/VaultHero\"\nimport BreadcrumbList from \"../General/BreadcrumbList\"\nimport Divider from \"../General/Divider\"\nimport Questions from \"../General/Questions\"\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n  margin-top:20px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst Fees = () => {\n    const [isManagementChecked, setIsManagementChecked] = useState(false)\n    const [isPerformanceChecked, setIsPerformanceChecked] = useState(false)\n    const [isEntranceChecked, setIsEntranceChecked] = useState(false)\n    const [managementFee, setManagementFee] = useState(\"\");\n    const [performanceFee, setPerformanceFee] = useState(\"\");\n    const [crystallizationPeriod, setCrystallizationPeriod] = useState(\"\");\n    const [entranceFee, setEntranceFee] = useState(\"\");\n\n\n    return (\n        <div>\n            <VaultHero />\n            <Container style={{ marginTop: \"20px\" }}>\n                <BreadcrumbList step={1} />\n\n                <Divider />\n                <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n                    <Heading size=\"lg\" color=\"secondary\" mt=\"10px\" mb=\"5px\">\n                        Fees (optional)\n                    </Heading>\n\n                    <Flex>\n                        <Text>There are several types of fees that can be charged. Please read each description carefully. All fees are paid out in shares of the vault.\n                            <Text bold style={{ display: \"inline\", marginLeft: \"5px\" }}>Fee settings cannot be changed after creation.</Text>\n                        </Text>\n                    </Flex>\n\n                    <ToggleWrapper>\n                        <Toggle checked={isManagementChecked} onChange={() => setIsManagementChecked(!isManagementChecked)} />\n                        <Text mr=\"5px\">Charge Management Fee</Text>\n                        <InfoIcon />\n                    </ToggleWrapper>\n\n                    {\n                        isManagementChecked && <div>\n                            <Box mt=\"10px\">\n                                <Text>Management fee is a flat fee charged to manage the vault. It is measured as an annual percent of total assets under management. It accrues continuously and is automatically paid out to the manager with every deposit and redemption.</Text>\n                            </Box>\n\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">Management Fee Rate</Text>\n                                <Box width=\"50%\">\n                                    <Input type=\"number\" min=\"1\" max=\"100\" placeholder=\"1%\" value={managementFee} onChange={(e) => {\n                                        setManagementFee(e.target.value)\n                                    }} />\n                                </Box>\n                            </Box>\n                        </div>\n                    }\n\n\n                    <ToggleWrapper>\n                        <Toggle checked={isPerformanceChecked} onChange={() => setIsPerformanceChecked(!isPerformanceChecked)} />\n                        <Text mr=\"5px\">Charge Performance Fee</Text>\n                        <InfoIcon />\n                    </ToggleWrapper>\n\n                    {\n                        isPerformanceChecked && <div>\n                            <Box mt=\"10px\">\n                                <Text>Performance fee is charged based on the vaults&apos;s performance. It can be claimed after each Crystallization Period, and it is subject to a high water mark. For an in-depth description of how this fee is calculated, please refer to the Enzyme Protocol Documentation.</Text>\n                            </Box>\n\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">Performance Fee Rate</Text>\n                                <Box width=\"50%\">\n                                    <Input value={performanceFee} type=\"number\" min=\"1\" max=\"100\" placeholder=\"30%\" onChange={(e) => setPerformanceFee(e.target.value)} />\n                                </Box>\n                            </Box>\n\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">Crystallization Period</Text>\n                                <Box width=\"50%\">\n                                    <Input value={crystallizationPeriod} onChange={(e) => setCrystallizationPeriod(e.target.value)} placeholder=\"365 days\" />\n                                </Box>\n                            </Box>\n                        </div>\n                    }\n\n                    <ToggleWrapper>\n                        <Toggle checked={isEntranceChecked} onChange={() => setIsEntranceChecked(!isEntranceChecked)} />\n                        <Text mr=\"5px\">Charge Entrance Fee</Text>\n                        <InfoIcon />\n                    </ToggleWrapper>\n\n                    {\n                        isEntranceChecked && <div style={{ width: \"100%\" }}>\n                            <Box mt=\"10px\">\n                                <Text>Entrance Fees are charged with every new deposit. The selected entrance fee is allocated to the manager.</Text>\n                            </Box>\n\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">Entrance Fee Rate</Text>\n                                <Box width=\"50%\">\n                                    <Input value={entranceFee} onChange={(e) => setEntranceFee(e.target.value)} placeholder=\"1%\" type=\"number\" min=\"1\" max=\"100\" />\n                                </Box>\n                            </Box>\n\n                            <Box mt=\"10px\">\n                                <Text mb=\"5px\">Entrance Fee allocated to</Text>\n                                <Select\n                                    options={[\n                                        {\n                                            value: 'Manager',\n                                            label: 'Manager',\n                                        },\n                                        {\n                                            value: 'Vault',\n                                            label: 'Vault'\n                                        }\n                                    ]}\n                                />\n                            </Box>\n                        </div>\n                    }\n\n                    <Box mt=\"10px\">\n                        <Button as={Link} to=\"/assets/setup/2\">Next</Button>\n                    </Box>\n\n                </Flex>\n\n                <Questions />\n            </Container>\n\n        </div >\n\n    )\n}\nexport default Fees","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"https://docs.leekdao.xyz\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import React from \"react\"\nimport Hero from \"./Hero\"\n\nconst VaultHero = () => {\n    const title = \"Create Your Vault\"\n    const heading = \"Your future asset management\"\n\n    return (\n        <Hero title={title} heading={heading} />\n    )\n}\n\nexport default VaultHero\n\n","import React from \"react\"\nimport { Breadcrumbs, Text } from \"hertz-uikit\"\n\nconst steps = ['Basic', 'Fees (optional)', 'Deposits (optional)', 'Redemptions (optional)', 'Advanced Settings (optional)', 'Review']\n\ninterface CurrentStepProps {\n    step: number\n}\n\nconst BreadcrumbList: React.FC<CurrentStepProps> = ({ step }) => {\n    return (\n        <Breadcrumbs>\n            {steps.map((item, index) => {\n                return (\n                    <Text key={item} color={index <= step ? 'text' : 'textDisabled'}>\n                        {item}\n                    </Text>\n                )\n            })}\n        </Breadcrumbs>\n    )\n}\n\nexport default BreadcrumbList","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text, Flex } from 'hertz-uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid 1px solid rgb(215, 202, 236);\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 50%;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid 1px solid rgb(215, 202, 236);\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid 1px solid rgb(215, 202, 236);\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: 1px solid rgb(215, 202, 236);\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  src?: string\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          {\n            options[selectedOptionIndex].src ? <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n              <img src={options[selectedOptionIndex].src} alt={options[selectedOptionIndex].label} width=\"30px\" />\n              <Text ml=\"10px\">{options[selectedOptionIndex].label}</Text>\n            </Flex> : <Text>{options[selectedOptionIndex].label}</Text>\n          }\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                {option.src ?\n                  <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n                    <img src={option.src} alt={option.label} width=\"30px\" />\n                    <Text ml=\"10px\">{option.label}</Text>\n                  </Flex>\n                  : <Text>{option.label}</Text>\n                }\n\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select"],"sourceRoot":""}