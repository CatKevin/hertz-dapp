{"version":3,"sources":["views/Asset/Components/Details/HertzTop.tsx","views/Asset/Components/General/Divider.tsx","views/Asset/Components/General/Hero.tsx","views/Asset/Components/General/Questions.tsx","views/Asset/Components/General/Row.tsx"],"names":["COLORS","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","toFixed","barChartData","amtY","amt","exposureData","data","week","month","day","CurrentLayout","styled","BaseLayout","theme","mediaQueries","sm","HertzTop","useState","activeIndex","setActiveIndex","chartInterval","setChartInterval","onPieEnter","useCallback","_","index","title","heading","flexDirection","alignItems","justifyContent","mb","mt","size","fontSize","color","width","height","margin","top","right","left","bottom","type","dataKey","strokeWidth","activeDot","style","marginRight","onClick","textTransform","bold","deposit","map","item","id","manager","weight","inception","activeShape","onMouseEnter","entry","length","strokeDasharray","Divider","div","colors","borderColor","StyledHero","Box","Title","Heading","attrs","as","primary","Image","lg","Hero","pr","InlineLink","Link","Questions","marginBottom","maxWidth","mr","src","alt","href","marginLeft","target","NameColumn","AumColumn","TopAssetsColumn","InceptionColumn","MonthColumn","DayColumn","WeekColumn","Row","Grid"],"mappings":"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","file":"static/js/23.9dda4722.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { Text, Card, Flex, Heading, Box, BaseLayout, Button } from 'hertz-uikit'\nimport Container from 'components/layout/Container'\nimport styled from 'styled-components'\nimport { LineChart, Line, PieChart, Pie, Sector, Cell, BarChart, CartesianGrid, XAxis, YAxis, Bar } from 'recharts'\nimport { Sparklines, SparklinesLine, SparklinesSpots, SparklinesReferenceLine } from 'react-sparklines'\nimport deposit from '../../Constants/depositList.json'\n\nimport Hero from '../General/Hero'\nimport Row, { NameColumn, AumColumn, TopAssetsColumn, InceptionColumn, MonthColumn } from '../General/Row'\n\nimport Questions from \"../General/Questions\"\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#ec2eb3', '#767177']\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props\n  const sin = Math.sin(-RADIAN * midAngle)\n  const cos = Math.cos(-RADIAN * midAngle)\n  const sx = cx + (outerRadius + 10) * cos\n  const sy = cy + (outerRadius + 10) * sin\n  const mx = cx + (outerRadius + 30) * cos\n  const my = cy + (outerRadius + 30) * sin\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22\n  const ey = my\n  const textAnchor = cos >= 0 ? 'start' : 'end'\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  )\n}\n\nconst barChartData = [\n  {\n    name: 'USD',\n    amtY: '$24,000,000',\n    amt: 24000000,\n  },\n  {\n    name: 'ETH',\n    amtY: '$6,000,000',\n    amt: 6000000,\n  },\n  {\n    name: 'BTC',\n    amtY: '$12,000,000',\n    amt: 12000000,\n  },\n  {\n    name: 'DPI',\n    amtY: '$8,727,272',\n    amt: 8727272,\n  },\n  {\n    name: 'NFT',\n    amtY: '$2,397,839',\n    amt: 2397839,\n  },\n  {\n    name: 'Other',\n    amtY: '$240,000',\n    amt: 240000,\n  },\n]\n\nconst exposureData = [\n  { name: 'USDT/USD', value: 400 },\n  { name: 'ETH', value: 100 },\n  { name: 'WBTC', value: 200 },\n  { name: 'DPI', value: 150 },\n  { name: 'NFT', value: 40 },\n  { name: 'OTHERS', value: 10 },\n]\n\nconst data = [\n  {\n    name: 'Bitcoin A',\n    week: 30000,\n    month: 55000,\n    day: 41000,\n  },\n  {\n    name: 'Bitcoin B',\n    week: 28000,\n    month: 65000,\n    day: 39000,\n  },\n  {\n    name: 'Bitcoin C',\n    week: 33000,\n    month: 45000,\n    day: 37000,\n  },\n  {\n    name: 'Bitcoin D',\n    week: 38000,\n    month: 35000,\n    day: 35000,\n  },\n  {\n    name: 'Bitcoin E',\n    week: 42000,\n    month: 30000,\n    day: 41500,\n  },\n  {\n    name: 'Bitcoin F',\n    week: 39000,\n    month: 38000,\n    day: 43000,\n  },\n  {\n    name: 'Bitcoin G',\n    week: 40000,\n    month: 43000,\n    day: 45000,\n  },\n]\n\n\nconst CurrentLayout = styled(BaseLayout)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding-left: 150px;\n  padding-right: 150px;\n  padding-top: 50px;\n  padding-bottom: 50px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 2fr;\n  }\n\n  @media (max-width: 768px) {\n    padding: 30px;\n  }\n`\n\nconst HertzTop: React.FC = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [chartInterval, setChartInterval] = useState('month')\n  const title = 'Hertz Top Index'\n  const heading = 'Invest in best top 10 fund as an Index '\n\n\n  const onPieEnter = useCallback(\n    (_, index) => {\n      setActiveIndex(index)\n    },\n    [setActiveIndex],\n  )\n\n  return (\n    <div>\n      <Hero title={title} heading={heading} />\n      <CurrentLayout>\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"\" mb=\"20px\" mt=\"20px\">\n          <Heading size=\"xxl\" mb=\"10px\">\n            $1.31\n          </Heading>\n          <Heading size=\"md\" mb=\"10px\">\n            VALUE MANAGED\n          </Heading>\n          <Text fontSize=\"30px\" mb=\"10px\">\n            $1,061,397.21\n          </Text>\n          <Heading size=\"md\" mb=\"10px\">\n            PERFORMANCE FEES\n          </Heading>\n          <Text fontSize=\"30px\" mb=\"10px\">\n            10%\n          </Text>\n          <Heading size=\"md\" mb=\"10px\">\n            LIFETIME RETURN ℹ️\n          </Heading>\n          <Text fontSize=\"30px\" mb=\"10px\" color=\"#31D0AA\">\n            +179.3%\n          </Text>\n          <Heading size=\"md\" mb=\"10px\">\n            MINING APR ℹ️\n          </Heading>\n          <Text fontSize=\"30px\" mb=\"10px\" color=\"#31D0AA\">\n            19.3%\n          </Text>\n        </Flex>\n        <Flex width=\"80%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"\" mb=\"20px\" mt=\"20px\">\n          <Heading size=\"xxl\" mb=\"10px\">\n            Charts\n          </Heading>\n          <LineChart\n            key={chartInterval}\n            width={1000}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <Line type=\"monotone\" dataKey={chartInterval} stroke=\"#8884d8\" strokeWidth={3} activeDot={{ r: 8 }} />\n          </LineChart>\n          <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"center\" mb=\"20px\">\n            <span style={{ marginRight: '10px' }}>\n              <Button\n                onClick={() => {\n                  setChartInterval('day')\n                }}\n              >\n                1 Day\n              </Button>\n            </span>\n            <span style={{ marginRight: '10px' }}>\n              <Button\n                onClick={() => {\n                  setChartInterval('week')\n                }}\n              >\n                1 Week\n              </Button>\n            </span>\n            <span>\n              <Button\n                onClick={() => {\n                  setChartInterval('month')\n                }}\n              >\n                3 Months\n              </Button>\n            </span>\n          </Flex>\n        </Flex>\n      </CurrentLayout>\n\n      <Container>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"20px\" mt=\"20px\">\n          <Heading size=\"lg\">About Hertz Top Index</Heading>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"20px\">\n          <Text>\n            hTopIndex is a tokenized index mirroring the best traders on Hertz. The Hertz platform crowdsources the best\n            managers around the world and ranks them based on their risk-adjusted returns. With hTopIndex anyone can\n            easily get exposure to the best traders through one ERC-20 token. Hertz ranks managers based on their Score.\n          </Text>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"20px\">\n          <Text>\n            Herts ranks managers based on their Score. The Score in turn is a reflection of a value-weighted\n            risk-adjusted return measure called Sortino Ratio. At the end of each month, hTopIndex rebalances to the 10\n            pools with the highest rank (place 1 to 10 on the Herts Leaderboard). Each pool has a weight in the index\n            relative to their Score. hTopIndex is managed by a bot that constantly tracks the pools in the index and\n            their underlying exposures and also pays the gas for all the rebalancing it’s doing. 100% of Performance\n            fees are shared with managers of pools included in the index.\n          </Text>\n        </Flex>\n      </Container>\n\n      <Container>\n        <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"start\" justifyContent=\"center\">\n          <Heading size=\"lg\" color=\"secondary\" mt=\"40px\" mb=\"10px\">\n            Index Composition\n          </Heading>\n        </Flex>\n        <Card>\n          <Row>\n            <Box>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                # Index\n              </Text>\n            </Box>\n            <NameColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                # Fund Name\n              </Text>\n            </NameColumn>\n            <AumColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                # Manager\n              </Text>\n            </AumColumn>\n            <TopAssetsColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                # Weight\n              </Text>\n            </TopAssetsColumn>\n            <InceptionColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                # Performance\n              </Text>\n            </InceptionColumn>\n            <Box width=\"100px\">\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                # Charts\n              </Text>\n            </Box>\n          </Row>\n\n          {deposit.map((item) => (\n            <Row key={item.id}>\n              <Box>\n                <Text fontSize=\"\" color=\"\" textTransform=\"uppercase\">\n                  {item.id}\n                </Text>\n              </Box>\n              <NameColumn>\n                <Text fontSize=\"\" color=\"\" textTransform=\"uppercase\">\n                  {item.name}\n                </Text>\n              </NameColumn>\n              <AumColumn>\n                <Text fontSize=\"\" color=\"\" textTransform=\"uppercase\">\n                  {item.manager}\n                </Text>\n              </AumColumn>\n              <TopAssetsColumn>\n                <Text fontSize=\"\" color=\"\" textTransform=\"uppercase\">\n                  {item.weight}\n                </Text>\n              </TopAssetsColumn>\n              <InceptionColumn>\n                <Text fontSize=\"\" color=\"\" textTransform=\"uppercase\">\n                  {item.inception}\n                </Text>\n              </InceptionColumn>\n              <MonthColumn>\n                <Sparklines data={item.week} width={250} height={100}>\n                  <SparklinesLine color={item.color} />\n                  <SparklinesSpots />\n                  <SparklinesReferenceLine type=\"mean\" />\n                </Sparklines>\n              </MonthColumn>\n            </Row>\n          ))}\n        </Card>\n        <Heading size=\"lg\" mt=\"20px\">\n          Exposure\n        </Heading>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"20px\" mt=\"20px\">\n          <PieChart width={400} height={600}>\n            <Pie\n              activeIndex={activeIndex}\n              activeShape={renderActiveShape}\n              data={exposureData}\n              cx=\"200\"\n              cy=\"300\"\n              innerRadius={60}\n              outerRadius={80}\n              dataKey=\"value\"\n              onMouseEnter={onPieEnter}\n            >\n              {data.map((entry, index) => (\n                <Cell fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n          </PieChart>\n          <BarChart\n            width={500}\n            height={300}\n            data={barChartData}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis width={100} />\n            <Bar dataKey=\"amt\">\n              {barChartData.map((entry, index) => (\n                <Cell fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Bar>\n          </BarChart>\n        </Flex>\n        <Questions />\n      </Container>\n    </div>\n  )\n}\n\nexport default HertzTop\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nexport default Divider","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'hertz-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\ninterface HeroProps {\n    title: string,\n    heading: string\n    image?: string\n}\n\nconst StyledHero = styled(Box)`\n background-image:linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero: React.FC<HeroProps> = ({ title, heading }) => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            {title}\n                        </Title>\n                        <Heading mb=\"16px\">\n                            {heading}\n                        </Heading>\n                    </Box>\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Box, Flex, Text, Heading, Link } from 'hertz-uikit'\nimport Divider from \"./Divider\"\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst Questions = () => {\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"#\" marginLeft=\"5px\" target=\"_blank\">\n                            our detailed document\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default Questions","import styled from 'styled-components'\nimport { Grid, Box } from 'hertz-uikit'\n\nexport const NameColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: name;\n`\n\nexport const AumColumn = styled(Box)`\n  grid-area: aum;\n`\n\nexport const TopAssetsColumn = styled(Box)`\n  grid-area: topAsset;\n`\n\nexport const InceptionColumn = styled(Box)`\n  grid-area: inception;\n`\n\nexport const MonthColumn = styled(Box)`\n  grid-area: month;\n`\n\nexport const DayColumn = styled(Box)`\n  grid-area: day;\n`\n\nexport const WeekColumn = styled(Box)`\n  grid-area: week;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  grid-gap: 8px;\n  grid-template-areas: 'id name aum topAsset inception month day week';\n  grid-template-columns:1fr 4fr 2fr 2fr 2fr 1fr 1fr 1fr;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 20px;\n    padding: 20px 24px;\n  }\n`\n\nexport default Row"],"sourceRoot":""}